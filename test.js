// Generated by Haxe 4.0.0-rc.1+1fdd3d59b
(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var haxedb_storage_Book = function() {
	this.persisted = false;
	this.index = new haxedb_record_books_BookRecord();
};
$hxClasses["haxedb.storage.Book"] = haxedb_storage_Book;
haxedb_storage_Book.__name__ = "haxedb.storage.Book";
haxedb_storage_Book.fromIndex = function(index) {
	var book = new haxedb_storage_Book();
	book.index = index;
	book.init();
	return book;
};
haxedb_storage_Book.open = function(file) {
	if(file == null) {
		file = "test";
	}
	var book = new haxedb_storage_Book();
	book.index.blobFile = file;
	book.init();
	return book;
};
haxedb_storage_Book.prototype = {
	get_dbFile: function() {
		return "./" + this.index.blobFile + ".db";
	}
	,get_id: function() {
		return this.index.id;
	}
	,get_pageSize: function() {
		return this.index.pageSize;
	}
	,nextFreePage: function() {
		return Math.max(this.index.pages + 1,1) | 0;
	}
	,init: function() {
		var indexPage = this.readPage(0);
		if(indexPage == null) {
			this.writeIndexPage();
		} else {
			var indexData = indexPage.string();
			this.index = haxe_Unserializer.run(indexData);
		}
	}
	,writeIndexPage: function() {
		var indexPage = new haxedb_storage_Page(0,this);
		var serializer = new haxe_Serializer();
		serializer.serialize(this.index);
		indexPage.writeFromString(serializer.toString());
		this.persistPage(indexPage);
		this.persist(true);
	}
	,persist: function(isNew) {
		if(isNew == null) {
			isNew = false;
		}
		var _gthis = this;
		this.updateIndexPage();
		if(haxedb_sys_System.get_library() != null) {
			if(isNew) {
				this.index.id = haxedb_sys_System.get_library().count();
			}
			var libRecord = haxedb_sys_System.get_library().getById(this.index.id);
			if(!this.persisted && libRecord == null) {
				haxedb_sys_System.log("Adding " + this.get_dbFile() + " to library! " + Std.string(this.index));
				haxedb_sys_System.get_library().addRecord(new haxedb_record_Record(this.index));
				this.persisted = true;
			} else {
				haxedb_sys_System.log("Updating " + this.get_dbFile() + ": " + Std.string(this.index));
				if(libRecord.get_dbFile() == this.get_dbFile()) {
					haxedb_sys_System.get_library().updateRecord(function(record) {
						return record.data.id == _gthis.index.id;
					},this.index);
				}
			}
			haxedb_sys_System.get_library().persistRecords();
		}
	}
	,updateIndexPage: function() {
		var indexPage = this.readPage(0);
		if(indexPage == null) {
			this.writeIndexPage();
			return;
		}
		var indexPage1 = new haxedb_storage_Page(0,this);
		var serializer = new haxe_Serializer();
		serializer.serialize(this.index);
		indexPage1.writeFromString(serializer.toString());
		this.persistPage(indexPage1);
	}
	,persistPage: function(page) {
		var pageBytes = page.toBytes();
		var pid = page.id();
		var pageStart = pid * this.get_pageSize();
		var incrementNumPages = false;
		if(this.index.pages < pid) {
			incrementNumPages = true;
		}
		var bytes = new haxe_io_Bytes(new ArrayBuffer(this.get_pageSize()));
		if(sys_FileSystem.exists(this.get_dbFile())) {
			var input = new sys_io_FileInput(js_node_Fs.openSync(this.get_dbFile(),"r"));
			bytes = input.readAll();
		}
		if(pageStart + pageBytes.length >= bytes.length) {
			var length = pageStart + pageBytes.length - (bytes.length - 1);
			var newBytes = new haxe_io_Bytes(new ArrayBuffer(bytes.length + length));
			newBytes.blit(0,bytes,0,bytes.length);
			bytes = newBytes;
		}
		var pageSize = pageBytes.length;
		bytes.blit(pageStart,pageBytes,0,pageSize);
		var output = new sys_io_FileOutput(js_node_Fs.openSync(this.get_dbFile(),"w"));
		output.writeBytes(bytes,0,bytes.length);
		output.flush();
		output.close();
		if(incrementNumPages) {
			this.index.pages++;
			this.persist();
		}
	}
	,readPage: function(id) {
		if(sys_FileSystem.exists(this.get_dbFile())) {
			var input = new sys_io_FileInput(js_node_Fs.openSync(this.get_dbFile(),"r"));
			input.seek(id * this.get_pageSize(),sys_io_FileSeek.SeekBegin);
			var page = null;
			try {
				var id1 = input.readUInt24();
				var size = input.readUInt24();
				var content = input.read(size);
				input.close();
				page = new haxedb_storage_Page(id1,this);
				page.writeFromBytes(content);
			} catch( e ) {
				var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
				if(((e1) instanceof haxe_io_Eof)) {
					var eof = e1;
					return null;
				} else {
					throw js__$Boot_HaxeError.wrap(e1);
				}
			}
			return page;
		} else {
			return null;
		}
	}
	,__class__: haxedb_storage_Book
	,__properties__: {get_dbFile:"get_dbFile",get_pageSize:"get_pageSize",get_id:"get_id"}
};
var haxedb_record_books_BookRecord = function() {
	this.pageSize = 8000;
	this.id = 0;
	this.pages = -1;
};
$hxClasses["haxedb.record.books.BookRecord"] = haxedb_record_books_BookRecord;
haxedb_record_books_BookRecord.__name__ = "haxedb.record.books.BookRecord";
haxedb_record_books_BookRecord.prototype = {
	__class__: haxedb_record_books_BookRecord
};
var haxedb_storage_Collection = function(book,loaded) {
	if(loaded == null) {
		loaded = false;
	}
	this.loaded = false;
	this.index = new haxedb_record_collections_CollectionRecord();
	this.loaded = loaded;
	this.index.pages = [];
	if(book != null) {
		this.index.bookId = book.get_id();
		this.book = book;
	}
	this.pages = new haxe_ds_IntMap();
	this.dirtyPages = [];
};
$hxClasses["haxedb.storage.Collection"] = haxedb_storage_Collection;
haxedb_storage_Collection.__name__ = "haxedb.storage.Collection";
haxedb_storage_Collection.load = function(index) {
	if(haxedb_sys_System.get_library() != null) {
		var book = haxedb_sys_System.get_library().getById(index.bookId);
		if(book == null) {
			throw new js__$Boot_HaxeError("Cannot resolve collection-book " + index.bookId);
		}
		var newCollection = new haxedb_storage_Collection(book,true);
		newCollection.setIndex(index);
		return newCollection;
	} else {
		throw new js__$Boot_HaxeError("Cannot load collection-books without library.");
	}
};
haxedb_storage_Collection.fromBook = function(book) {
	var loadedCollection = haxedb_sys_System.get_collectionManager().getRecord(function(record) {
		return record.data.bookId == book.index.id;
	});
	if(loadedCollection != null) {
		return haxedb_storage_Collection.load(loadedCollection.data);
	} else {
		return new haxedb_storage_Collection(book);
	}
};
haxedb_storage_Collection.prototype = {
	persist: function() {
		var _gthis = this;
		this.persistRecords();
		if(haxedb_sys_System.get_collectionManager() != null) {
			if(!this.loaded && this.index.id == 0) {
				this.index.id = haxedb_sys_System.get_collectionManager().count();
			}
			if(haxedb_sys_System.get_collectionManager().getById(this.index.id) == null) {
				haxedb_sys_System.get_collectionManager().addRecord(new haxedb_record_Record(this.index));
			} else {
				haxedb_sys_System.get_collectionManager().updateRecord(function(record) {
					return record.data.id == _gthis.index.id;
				},this.index);
			}
			haxedb_sys_System.get_collectionManager().persistRecords(true);
		}
	}
	,isCollectionMgr: function() {
		return this.book == haxedb_sys_System.sysBook;
	}
	,persistRecords: function(force) {
		if(force == null) {
			force = false;
		}
		var _gthis = this;
		if(this.book == null) {
			throw new js__$Boot_HaxeError("Cannot persist page with no book.");
		}
		var pages = !force ? this.dirtyPages : this.index.pages;
		Lambda.iter(pages,function(pageNo) {
			var page = _gthis.getPage(pageNo);
			var pageData_id = page.id();
			var pageData_content = page.string();
			_gthis.book.persistPage(page);
			return;
		});
		this.dirtyPages = [];
	}
	,setIndex: function(index) {
		this.index = index;
	}
	,getBook: function() {
		if(haxedb_sys_System.get_library() != null) {
			return haxedb_sys_System.get_library().getById(this.index.bookId);
		} else {
			return haxedb_sys_System.sysBook;
		}
	}
	,getPage: function(pageNo) {
		if(this.pages.h.hasOwnProperty(pageNo)) {
			return this.pages.h[pageNo];
		} else if(this.book != null) {
			var this1 = this.pages;
			var value = haxedb_storage_RecordsPage.fromPage(this.book.readPage(pageNo));
			this1.h[pageNo] = value;
			return this.pages.h[pageNo];
		}
		return null;
	}
	,addRecords: function(records) {
		var _g = 0;
		var _g1 = this.index.pages;
		while(_g < _g1.length) {
			var pageNo = _g1[_g];
			++_g;
			var page = this.getPage(pageNo);
			if(page != null && page.addRecords(records)) {
				this.dirtyPages.push(page.id());
				this.persist();
				return true;
			}
		}
		try {
			var newPage = new haxedb_storage_RecordsPage(-1,this.book);
			this.index.pages.push(newPage.id());
			var this1 = this.pages;
			var key = newPage.id();
			this1.h[key] = newPage;
			if(this.book != null) {
				var retVal = newPage.addRecords(records);
				if(!retVal) {
					var bisection = records.length / 2 | 0;
					var records1 = records.slice(0,bisection);
					var records2 = records.slice(bisection);
					if(this.addRecords(records1)) {
						return this.addRecords(records2);
					} else {
						return false;
					}
				}
				this.book.persistPage(newPage);
				this.dirtyPages.push(newPage.id());
				this.persist();
				return retVal;
			} else {
				this.persist();
				return newPage.addRecords(records);
			}
		} catch( ex ) {
			throw js__$Boot_HaxeError.wrap(((ex) instanceof js__$Boot_HaxeError) ? ex.val : ex);
		}
	}
	,addRecord: function(record) {
		var _g = 0;
		var _g1 = this.index.pages;
		while(_g < _g1.length) {
			var pageNo = _g1[_g];
			++_g;
			var page = this.getPage(pageNo);
			if(page != null && page.addRecord(record)) {
				this.dirtyPages.push(page.id());
				this.persist();
				return true;
			}
		}
		try {
			var newPage = new haxedb_storage_RecordsPage(-1,this.book);
			this.index.pages.push(newPage.id());
			var this1 = this.pages;
			var key = newPage.id();
			this1.h[key] = newPage;
			if(this.book != null) {
				var retVal = newPage.addRecord(record);
				this.book.persistPage(newPage);
				this.dirtyPages.push(newPage.id());
				this.persist();
				return retVal;
			} else {
				this.persist();
				return newPage.addRecord(record);
			}
		} catch( ex ) {
			throw js__$Boot_HaxeError.wrap(((ex) instanceof js__$Boot_HaxeError) ? ex.val : ex);
		}
	}
	,getRecord: function(predicate) {
		var _g = 0;
		var _g1 = this.index.pages;
		while(_g < _g1.length) {
			var pageNo = _g1[_g];
			++_g;
			var page = this.getPage(pageNo);
			var result = page != null ? page.getRecord(predicate) : null;
			if(result != null) {
				return result;
			}
		}
		return null;
	}
	,count: function() {
		return this.getRecords(function(record) {
			return true;
		}).length;
	}
	,updateRecord: function(predicate,value) {
		var _g = 0;
		var _g1 = this.index.pages;
		while(_g < _g1.length) {
			var pageNo = _g1[_g];
			++_g;
			var page = this.getPage(pageNo);
			if(page != null && page.updateRecord(predicate,value)) {
				this.dirtyPages.push(page.id());
				return true;
			}
		}
		return false;
	}
	,updateRecords: function(predicate,value) {
		var retVal = false;
		var _g = 0;
		var _g1 = this.index.pages;
		while(_g < _g1.length) {
			var pageNo = _g1[_g];
			++_g;
			var page = this.getPage(pageNo);
			if(page != null && page.updateRecord(predicate,value)) {
				this.dirtyPages.push(page.id());
				retVal = true;
			}
		}
		return retVal;
	}
	,getRecords: function(predicate) {
		var aggregate = [];
		var _g = 0;
		var _g1 = this.index.pages;
		while(_g < _g1.length) {
			var pageNo = _g1[_g];
			++_g;
			var page = this.getPage(pageNo);
			var result = page != null ? page.getRecords(predicate) : null;
			if(result != null && result.length != 0) {
				aggregate = aggregate.concat(result);
			}
		}
		return aggregate;
	}
	,removeRecord: function(record) {
		var _g = 0;
		var _g1 = this.index.pages;
		while(_g < _g1.length) {
			var pageNo = _g1[_g];
			++_g;
			var page = this.getPage(pageNo);
			if(page != null && page.removeRecord(record.location.recordNo)) {
				this.dirtyPages.push(page.id());
				return true;
			}
		}
		return false;
	}
	,__class__: haxedb_storage_Collection
};
var haxedb_sys_System = function() { };
$hxClasses["haxedb.sys.System"] = haxedb_sys_System;
haxedb_sys_System.__name__ = "haxedb.sys.System";
haxedb_sys_System.__properties__ = {get_collectionManager:"get_collectionManager",get_library:"get_library"};
haxedb_sys_System.get_library = function() {
	if(haxedb_sys_System._library == null && haxedb_sys_System.index != null && haxedb_sys_System.index.library != null) {
		haxedb_sys_System._library = haxedb_sys_books_Library.load(haxedb_sys_System.index.library);
	}
	return haxedb_sys_System._library;
};
haxedb_sys_System.get_collectionManager = function() {
	if(haxedb_sys_System._collectionManager == null && haxedb_sys_System.index != null && haxedb_sys_System.index.collectionManager != null) {
		haxedb_sys_System._collectionManager = haxedb_sys_collections_CollectionManager.load(haxedb_sys_System.index.collectionManager);
		haxedb_sys_System.collectionsInitialized = true;
	}
	return haxedb_sys_System._collectionManager;
};
haxedb_sys_System.init = function() {
	haxedb_sys_System.log("--------------------------------------BOOT (" + HxOverrides.dateStr(new Date()) + ")------------------------------------------");
	if(!haxedb_sys_System.tryLoadFromFile()) {
		haxedb_sys_System.index = new haxedb_sys_SysIndex();
		var library = new haxedb_sys_books_Library(haxedb_sys_System.sysBook);
		var prefacePage = new haxedb_storage_Page(1,haxedb_sys_System.sysBook);
		haxedb_sys_System.index.library = library.index;
		prefacePage.writeFromString(haxe_Serializer.run(haxedb_sys_System.index));
		haxedb_sys_System.sysBook.persistPage(prefacePage);
		var collectionManager = new haxedb_sys_collections_CollectionManager(haxedb_sys_System.sysBook);
		haxedb_sys_System.index.collectionManager = collectionManager.index;
		haxedb_sys_System.get_collectionManager().persist();
		var print = { id : prefacePage.id(), content : prefacePage.string(), nextPage : haxedb_sys_System.sysBook.nextFreePage()};
		haxedb_sys_System.log("preface: " + Std.string(print));
		haxedb_sys_System.log("Libraries: " + Std.string(haxedb_sys_System.get_library()));
		haxedb_sys_System.log("Collections: " + Std.string(haxedb_sys_System.get_collectionManager()));
	}
};
haxedb_sys_System.log = function(text) {
	var fileContent = js_node_Fs.existsSync("./sys.db.log") ? js_node_Fs.readFileSync("./sys.db.log").toString() : "";
	js_node_Fs.writeFileSync("./sys.db.log",fileContent + ("" + text + "\n"));
};
haxedb_sys_System.tryLoadFromFile = function() {
	var prefacePage = haxedb_sys_System.sysBook.readPage(1);
	if(prefacePage != null) {
		haxedb_sys_System.index = haxe_Unserializer.run(prefacePage.string());
		haxedb_sys_System._library = haxedb_sys_books_Library.load(haxedb_sys_System.index.library);
		haxedb_sys_System._collectionManager = haxedb_sys_collections_CollectionManager.load(haxedb_sys_System.index.collectionManager);
		return true;
	} else {
		return false;
	}
};
haxedb_sys_System.teardown = function() {
	var prefacePage = new haxedb_storage_Page(1,haxedb_sys_System.sysBook);
	var newIndex = new haxedb_sys_SysIndex();
	haxedb_sys_System.get_collectionManager().persist();
	haxedb_sys_System.get_library().persist();
	newIndex.library = haxedb_sys_System.get_library().index;
	newIndex.collectionManager = haxedb_sys_System.get_collectionManager().index;
	prefacePage.writeFromString(haxe_Serializer.run(newIndex));
	haxedb_sys_System.sysBook.persistPage(prefacePage);
	haxedb_sys_System.log("--------------------------------------END (" + HxOverrides.dateStr(new Date()) + ")------------------------------------------");
};
var haxedb_sys_collections_CollectionManager = function(book,loaded) {
	haxedb_storage_Collection.call(this,book,loaded);
};
$hxClasses["haxedb.sys.collections.CollectionManager"] = haxedb_sys_collections_CollectionManager;
haxedb_sys_collections_CollectionManager.__name__ = "haxedb.sys.collections.CollectionManager";
haxedb_sys_collections_CollectionManager.load = function(index) {
	var mgr = new haxedb_sys_collections_CollectionManager(haxedb_sys_System.sysBook);
	mgr.loaded = true;
	mgr.setIndex(index);
	mgr.book = haxedb_sys_System.sysBook;
	return mgr;
};
haxedb_sys_collections_CollectionManager.__super__ = haxedb_storage_Collection;
haxedb_sys_collections_CollectionManager.prototype = $extend(haxedb_storage_Collection.prototype,{
	getById: function(id) {
		var result = this.getRecord(function(record) {
			return record.data.id == id;
		});
		if(result != null) {
			return haxedb_storage_Collection.load(result.data);
		} else {
			return null;
		}
	}
	,__class__: haxedb_sys_collections_CollectionManager
});
var haxedb_record_collections_CollectionRecord = function() {
	this.id = 0;
	if(haxedb_sys_System.collectionsInitialized && haxedb_sys_System.get_collectionManager() != null) {
		this.id = haxedb_sys_System.get_collectionManager().count();
	}
};
$hxClasses["haxedb.record.collections.CollectionRecord"] = haxedb_record_collections_CollectionRecord;
haxedb_record_collections_CollectionRecord.__name__ = "haxedb.record.collections.CollectionRecord";
haxedb_record_collections_CollectionRecord.prototype = {
	__class__: haxedb_record_collections_CollectionRecord
};
var haxedb_sys_books_Library = function(book,loaded) {
	haxedb_storage_Collection.call(this,book,loaded);
};
$hxClasses["haxedb.sys.books.Library"] = haxedb_sys_books_Library;
haxedb_sys_books_Library.__name__ = "haxedb.sys.books.Library";
haxedb_sys_books_Library.load = function(index) {
	var lib = new haxedb_sys_books_Library(haxedb_sys_System.sysBook);
	lib.loaded = true;
	lib.setIndex(index);
	lib.book = haxedb_sys_System.sysBook;
	return lib;
};
haxedb_sys_books_Library.__super__ = haxedb_storage_Collection;
haxedb_sys_books_Library.prototype = $extend(haxedb_storage_Collection.prototype,{
	getById: function(id) {
		var result = this.getRecord(function(record) {
			return record.data.id == id;
		});
		if(result != null) {
			return haxedb_storage_Book.fromIndex(result.data);
		} else {
			return null;
		}
	}
	,addRecord: function(record) {
		var records = this.getRecords(function(record1) {
			return true;
		});
		return haxedb_storage_Collection.prototype.addRecord.call(this,record);
	}
	,persistRecords: function(force) {
		if(force == null) {
			force = false;
		}
		var allRecords = this.getRecords(function(record) {
			return true;
		});
		haxedb_storage_Collection.prototype.persistRecords.call(this,force);
		var allNewRecords = this.getRecords(function(record1) {
			return true;
		});
	}
	,__class__: haxedb_sys_books_Library
});
var haxedb_record_Record = function(data) {
	this.data = data;
	this.location = { pageNo : 0, recordNo : 0};
};
$hxClasses["haxedb.record.Record"] = haxedb_record_Record;
haxedb_record_Record.__name__ = "haxedb.record.Record";
haxedb_record_Record.prototype = {
	__class__: haxedb_record_Record
};
var hscript_Interp = function() {
	var _gthis = this;
	this.variables = new haxe_ds_StringMap();
	this.locals = new haxe_ds_StringMap();
	this.declared = [];
	var _this = this.variables;
	if(__map_reserved["null"] != null) {
		_this.setReserved("null",null);
	} else {
		_this.h["null"] = null;
	}
	var _this1 = this.variables;
	if(__map_reserved["true"] != null) {
		_this1.setReserved("true",true);
	} else {
		_this1.h["true"] = true;
	}
	var _this2 = this.variables;
	if(__map_reserved["false"] != null) {
		_this2.setReserved("false",false);
	} else {
		_this2.h["false"] = false;
	}
	var _this3 = this.variables;
	var value = Reflect.makeVarArgs(function(el) {
		var inf = _gthis.posInfos();
		var v = el.shift();
		if(el.length > 0) {
			inf.customParams = el;
		}
		haxe_Log.trace(Std.string(v),inf);
	});
	if(__map_reserved["trace"] != null) {
		_this3.setReserved("trace",value);
	} else {
		_this3.h["trace"] = value;
	}
	this.initOps();
};
$hxClasses["hscript.Interp"] = hscript_Interp;
hscript_Interp.__name__ = "hscript.Interp";
hscript_Interp.prototype = {
	posInfos: function() {
		return { fileName : "hscript", lineNumber : 0};
	}
	,initOps: function() {
		var me = this;
		this.binops = new haxe_ds_StringMap();
		var _this = this.binops;
		var value = function(e1,e2) {
			return me.expr(e1) + me.expr(e2);
		};
		if(__map_reserved["+"] != null) {
			_this.setReserved("+",value);
		} else {
			_this.h["+"] = value;
		}
		var _this1 = this.binops;
		var value1 = function(e11,e21) {
			return me.expr(e11) - me.expr(e21);
		};
		if(__map_reserved["-"] != null) {
			_this1.setReserved("-",value1);
		} else {
			_this1.h["-"] = value1;
		}
		var _this2 = this.binops;
		var value2 = function(e12,e22) {
			return me.expr(e12) * me.expr(e22);
		};
		if(__map_reserved["*"] != null) {
			_this2.setReserved("*",value2);
		} else {
			_this2.h["*"] = value2;
		}
		var _this3 = this.binops;
		var value3 = function(e13,e23) {
			return me.expr(e13) / me.expr(e23);
		};
		if(__map_reserved["/"] != null) {
			_this3.setReserved("/",value3);
		} else {
			_this3.h["/"] = value3;
		}
		var _this4 = this.binops;
		var value4 = function(e14,e24) {
			return me.expr(e14) % me.expr(e24);
		};
		if(__map_reserved["%"] != null) {
			_this4.setReserved("%",value4);
		} else {
			_this4.h["%"] = value4;
		}
		var _this5 = this.binops;
		var value5 = function(e15,e25) {
			return me.expr(e15) & me.expr(e25);
		};
		if(__map_reserved["&"] != null) {
			_this5.setReserved("&",value5);
		} else {
			_this5.h["&"] = value5;
		}
		var _this6 = this.binops;
		var value6 = function(e16,e26) {
			return me.expr(e16) | me.expr(e26);
		};
		if(__map_reserved["|"] != null) {
			_this6.setReserved("|",value6);
		} else {
			_this6.h["|"] = value6;
		}
		var _this7 = this.binops;
		var value7 = function(e17,e27) {
			return me.expr(e17) ^ me.expr(e27);
		};
		if(__map_reserved["^"] != null) {
			_this7.setReserved("^",value7);
		} else {
			_this7.h["^"] = value7;
		}
		var _this8 = this.binops;
		var value8 = function(e18,e28) {
			return me.expr(e18) << me.expr(e28);
		};
		if(__map_reserved["<<"] != null) {
			_this8.setReserved("<<",value8);
		} else {
			_this8.h["<<"] = value8;
		}
		var _this9 = this.binops;
		var value9 = function(e19,e29) {
			return me.expr(e19) >> me.expr(e29);
		};
		if(__map_reserved[">>"] != null) {
			_this9.setReserved(">>",value9);
		} else {
			_this9.h[">>"] = value9;
		}
		var _this10 = this.binops;
		var value10 = function(e110,e210) {
			return me.expr(e110) >>> me.expr(e210);
		};
		if(__map_reserved[">>>"] != null) {
			_this10.setReserved(">>>",value10);
		} else {
			_this10.h[">>>"] = value10;
		}
		var _this11 = this.binops;
		var value11 = function(e111,e211) {
			return me.expr(e111) == me.expr(e211);
		};
		if(__map_reserved["=="] != null) {
			_this11.setReserved("==",value11);
		} else {
			_this11.h["=="] = value11;
		}
		var _this12 = this.binops;
		var value12 = function(e112,e212) {
			return me.expr(e112) != me.expr(e212);
		};
		if(__map_reserved["!="] != null) {
			_this12.setReserved("!=",value12);
		} else {
			_this12.h["!="] = value12;
		}
		var _this13 = this.binops;
		var value13 = function(e113,e213) {
			return me.expr(e113) >= me.expr(e213);
		};
		if(__map_reserved[">="] != null) {
			_this13.setReserved(">=",value13);
		} else {
			_this13.h[">="] = value13;
		}
		var _this14 = this.binops;
		var value14 = function(e114,e214) {
			return me.expr(e114) <= me.expr(e214);
		};
		if(__map_reserved["<="] != null) {
			_this14.setReserved("<=",value14);
		} else {
			_this14.h["<="] = value14;
		}
		var _this15 = this.binops;
		var value15 = function(e115,e215) {
			return me.expr(e115) > me.expr(e215);
		};
		if(__map_reserved[">"] != null) {
			_this15.setReserved(">",value15);
		} else {
			_this15.h[">"] = value15;
		}
		var _this16 = this.binops;
		var value16 = function(e116,e216) {
			return me.expr(e116) < me.expr(e216);
		};
		if(__map_reserved["<"] != null) {
			_this16.setReserved("<",value16);
		} else {
			_this16.h["<"] = value16;
		}
		var _this17 = this.binops;
		var value17 = function(e117,e217) {
			if(me.expr(e117) != true) {
				return me.expr(e217) == true;
			} else {
				return true;
			}
		};
		if(__map_reserved["||"] != null) {
			_this17.setReserved("||",value17);
		} else {
			_this17.h["||"] = value17;
		}
		var _this18 = this.binops;
		var value18 = function(e118,e218) {
			if(me.expr(e118) == true) {
				return me.expr(e218) == true;
			} else {
				return false;
			}
		};
		if(__map_reserved["&&"] != null) {
			_this18.setReserved("&&",value18);
		} else {
			_this18.h["&&"] = value18;
		}
		var _this19 = this.binops;
		var value19 = $bind(this,this.assign);
		if(__map_reserved["="] != null) {
			_this19.setReserved("=",value19);
		} else {
			_this19.h["="] = value19;
		}
		var _this20 = this.binops;
		var value20 = function(e119,e219) {
			return new IntIterator(me.expr(e119),me.expr(e219));
		};
		if(__map_reserved["..."] != null) {
			_this20.setReserved("...",value20);
		} else {
			_this20.h["..."] = value20;
		}
		this.assignOp("+=",function(v1,v2) {
			return v1 + v2;
		});
		this.assignOp("-=",function(v11,v21) {
			return v11 - v21;
		});
		this.assignOp("*=",function(v12,v22) {
			return v12 * v22;
		});
		this.assignOp("/=",function(v13,v23) {
			return v13 / v23;
		});
		this.assignOp("%=",function(v14,v24) {
			return v14 % v24;
		});
		this.assignOp("&=",function(v15,v25) {
			return v15 & v25;
		});
		this.assignOp("|=",function(v16,v26) {
			return v16 | v26;
		});
		this.assignOp("^=",function(v17,v27) {
			return v17 ^ v27;
		});
		this.assignOp("<<=",function(v18,v28) {
			return v18 << v28;
		});
		this.assignOp(">>=",function(v19,v29) {
			return v19 >> v29;
		});
		this.assignOp(">>>=",function(v110,v210) {
			return v110 >>> v210;
		});
	}
	,assign: function(e1,e2) {
		var v = this.expr(e2);
		switch(e1._hx_index) {
		case 1:
			var id = e1.v;
			var _this = this.locals;
			var l = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
			if(l == null) {
				var _this1 = this.variables;
				if(__map_reserved[id] != null) {
					_this1.setReserved(id,v);
				} else {
					_this1.h[id] = v;
				}
			} else {
				l.r = v;
			}
			break;
		case 5:
			var f = e1.f;
			var e = e1.e;
			v = this.set(this.expr(e),f,v);
			break;
		case 16:
			var index = e1.index;
			var e3 = e1.e;
			var arr = this.expr(e3);
			var index1 = this.expr(index);
			if(js_Boot.__instanceof(arr,haxe_IMap)) {
				(js_Boot.__cast(arr , haxe_IMap)).set(index1,v);
			} else {
				arr[index1] = v;
			}
			break;
		default:
			var e4 = hscript_Error.EInvalidOp("=");
			throw new js__$Boot_HaxeError(e4);
		}
		return v;
	}
	,assignOp: function(op,fop) {
		var me = this;
		var _this = this.binops;
		var value = function(e1,e2) {
			return me.evalAssignOp(op,fop,e1,e2);
		};
		if(__map_reserved[op] != null) {
			_this.setReserved(op,value);
		} else {
			_this.h[op] = value;
		}
	}
	,evalAssignOp: function(op,fop,e1,e2) {
		var v;
		switch(e1._hx_index) {
		case 1:
			var id = e1.v;
			var _this = this.locals;
			var l = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
			v = fop(this.expr(e1),this.expr(e2));
			if(l == null) {
				var _this1 = this.variables;
				if(__map_reserved[id] != null) {
					_this1.setReserved(id,v);
				} else {
					_this1.h[id] = v;
				}
			} else {
				l.r = v;
			}
			break;
		case 5:
			var f = e1.f;
			var e = e1.e;
			var obj = this.expr(e);
			v = fop(this.get(obj,f),this.expr(e2));
			v = this.set(obj,f,v);
			break;
		case 16:
			var index = e1.index;
			var e3 = e1.e;
			var arr = this.expr(e3);
			var index1 = this.expr(index);
			if(js_Boot.__instanceof(arr,haxe_IMap)) {
				v = fop((js_Boot.__cast(arr , haxe_IMap)).get(index1),this.expr(e2));
				(js_Boot.__cast(arr , haxe_IMap)).set(index1,v);
			} else {
				v = fop(arr[index1],this.expr(e2));
				arr[index1] = v;
			}
			break;
		default:
			var e4 = hscript_Error.EInvalidOp(op);
			throw new js__$Boot_HaxeError(e4);
		}
		return v;
	}
	,increment: function(e,prefix,delta) {
		switch(e._hx_index) {
		case 1:
			var id = e.v;
			var _this = this.locals;
			var l = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
			var v;
			if(l == null) {
				var _this1 = this.variables;
				v = __map_reserved[id] != null ? _this1.getReserved(id) : _this1.h[id];
			} else {
				v = l.r;
			}
			if(prefix) {
				v += delta;
				if(l == null) {
					var _this2 = this.variables;
					var value = v;
					if(__map_reserved[id] != null) {
						_this2.setReserved(id,value);
					} else {
						_this2.h[id] = value;
					}
				} else {
					l.r = v;
				}
			} else if(l == null) {
				var _this3 = this.variables;
				var value1 = v + delta;
				if(__map_reserved[id] != null) {
					_this3.setReserved(id,value1);
				} else {
					_this3.h[id] = value1;
				}
			} else {
				l.r = v + delta;
			}
			return v;
		case 5:
			var f = e.f;
			var e1 = e.e;
			var obj = this.expr(e1);
			var v1 = this.get(obj,f);
			if(prefix) {
				v1 += delta;
				this.set(obj,f,v1);
			} else {
				this.set(obj,f,v1 + delta);
			}
			return v1;
		case 16:
			var index = e.index;
			var e2 = e.e;
			var arr = this.expr(e2);
			var index1 = this.expr(index);
			if(js_Boot.__instanceof(arr,haxe_IMap)) {
				var v2 = (js_Boot.__cast(arr , haxe_IMap)).get(index1);
				if(prefix) {
					v2 += delta;
					(js_Boot.__cast(arr , haxe_IMap)).set(index1,v2);
				} else {
					(js_Boot.__cast(arr , haxe_IMap)).set(index1,v2 + delta);
				}
				return v2;
			} else {
				var v3 = arr[index1];
				if(prefix) {
					v3 += delta;
					arr[index1] = v3;
				} else {
					arr[index1] = v3 + delta;
				}
				return v3;
			}
			break;
		default:
			var e3 = hscript_Error.EInvalidOp(delta > 0 ? "++" : "--");
			throw new js__$Boot_HaxeError(e3);
		}
	}
	,execute: function(expr) {
		this.depth = 0;
		this.locals = new haxe_ds_StringMap();
		this.declared = [];
		return this.exprReturn(expr);
	}
	,exprReturn: function(e) {
		try {
			return this.expr(e);
		} catch( e1 ) {
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			if(js_Boot.__instanceof(e2,hscript__$Interp_Stop)) {
				switch(e2._hx_index) {
				case 0:
					throw new js__$Boot_HaxeError("Invalid break");
				case 1:
					throw new js__$Boot_HaxeError("Invalid continue");
				case 2:
					var v = this.returnValue;
					this.returnValue = null;
					return v;
				}
			} else {
				throw e1;
			}
		}
	}
	,duplicate: function(h) {
		var h2 = new haxe_ds_StringMap();
		var k = h.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			var value = __map_reserved[k1] != null ? h.getReserved(k1) : h.h[k1];
			if(__map_reserved[k1] != null) {
				h2.setReserved(k1,value);
			} else {
				h2.h[k1] = value;
			}
		}
		return h2;
	}
	,restore: function(old) {
		while(this.declared.length > old) {
			var d = this.declared.pop();
			var key = d.n;
			var value = d.old;
			var _this = this.locals;
			if(__map_reserved[key] != null) {
				_this.setReserved(key,value);
			} else {
				_this.h[key] = value;
			}
		}
	}
	,error: function(e,rethrow) {
		if(rethrow == null) {
			rethrow = false;
		}
		if(rethrow) {
			throw js__$Boot_HaxeError.wrap(e);
		} else {
			throw new js__$Boot_HaxeError(e);
		}
	}
	,rethrow: function(e) {
		throw js__$Boot_HaxeError.wrap(e);
	}
	,resolve: function(id) {
		var _this = this.locals;
		var l = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
		if(l != null) {
			return l.r;
		}
		var _this1 = this.variables;
		var v = __map_reserved[id] != null ? _this1.getReserved(id) : _this1.h[id];
		var tmp;
		if(v == null) {
			var _this2 = this.variables;
			tmp = !(__map_reserved[id] != null ? _this2.existsReserved(id) : _this2.h.hasOwnProperty(id));
		} else {
			tmp = false;
		}
		if(tmp) {
			var e = hscript_Error.EUnknownVariable(id);
			throw new js__$Boot_HaxeError(e);
		}
		return v;
	}
	,expr: function(e) {
		var _gthis = this;
		switch(e._hx_index) {
		case 0:
			var c = e.c;
			switch(c._hx_index) {
			case 0:
				var v = c.v;
				return v;
			case 1:
				var f = c.f;
				return f;
			case 2:
				var s = c.s;
				return s;
			}
			break;
		case 1:
			var id = e.v;
			return this.resolve(id);
		case 2:
			var e1 = e.e;
			var n = e.n;
			var _this = this.locals;
			this.declared.push({ n : n, old : __map_reserved[n] != null ? _this.getReserved(n) : _this.h[n]});
			var this1 = this.locals;
			var value = { r : e1 == null ? null : this.expr(e1)};
			var _this1 = this1;
			if(__map_reserved[n] != null) {
				_this1.setReserved(n,value);
			} else {
				_this1.h[n] = value;
			}
			return null;
		case 3:
			var e2 = e.e;
			return this.expr(e2);
		case 4:
			var exprs = e.e;
			var old = this.declared.length;
			var v1 = null;
			var _g = 0;
			while(_g < exprs.length) {
				var e3 = exprs[_g];
				++_g;
				v1 = this.expr(e3);
			}
			this.restore(old);
			return v1;
		case 5:
			var f1 = e.f;
			var e4 = e.e;
			return this.get(this.expr(e4),f1);
		case 6:
			var e21 = e.e2;
			var e11 = e.e1;
			var op = e.op;
			var _this2 = this.binops;
			var fop = __map_reserved[op] != null ? _this2.getReserved(op) : _this2.h[op];
			if(fop == null) {
				var e5 = hscript_Error.EInvalidOp(op);
				throw new js__$Boot_HaxeError(e5);
			}
			return fop(e11,e21);
		case 7:
			var e6 = e.e;
			var prefix = e.prefix;
			var op1 = e.op;
			switch(op1) {
			case "!":
				return this.expr(e6) != true;
			case "++":
				return this.increment(e6,prefix,1);
			case "-":
				return -this.expr(e6);
			case "--":
				return this.increment(e6,prefix,-1);
			case "~":
				return ~this.expr(e6);
			default:
				var e7 = hscript_Error.EInvalidOp(op1);
				throw new js__$Boot_HaxeError(e7);
			}
			break;
		case 8:
			var params = e.params;
			var e8 = e.e;
			var args = [];
			var _g1 = 0;
			while(_g1 < params.length) {
				var p = params[_g1];
				++_g1;
				args.push(this.expr(p));
			}
			if(e8._hx_index == 5) {
				var f2 = e8.f;
				var e9 = e8.e;
				var obj = this.expr(e9);
				if(obj == null) {
					var e10 = hscript_Error.EInvalidAccess(f2);
					throw new js__$Boot_HaxeError(e10);
				}
				return this.fcall(obj,f2,args);
			} else {
				return this.call(null,this.expr(e8),args);
			}
			break;
		case 9:
			var e22 = e.e2;
			var e12 = e.e1;
			var econd = e.cond;
			if(this.expr(econd) == true) {
				return this.expr(e12);
			} else if(e22 == null) {
				return null;
			} else {
				return this.expr(e22);
			}
			break;
		case 10:
			var e13 = e.e;
			var econd1 = e.cond;
			this.whileLoop(econd1,e13);
			return null;
		case 11:
			var e14 = e.e;
			var it = e.it;
			var v2 = e.v;
			this.forLoop(v2,it,e14);
			return null;
		case 12:
			throw new js__$Boot_HaxeError(hscript__$Interp_Stop.SBreak);
		case 13:
			throw new js__$Boot_HaxeError(hscript__$Interp_Stop.SContinue);
		case 14:
			var name = e.name;
			var fexpr = e.e;
			var params1 = e.args;
			var capturedLocals = this.duplicate(this.locals);
			var me = this;
			var hasOpt = false;
			var minParams = 0;
			var _g2 = 0;
			while(_g2 < params1.length) {
				var p1 = params1[_g2];
				++_g2;
				if(p1.opt) {
					hasOpt = true;
				} else {
					minParams += 1;
				}
			}
			var f3 = function(args1) {
				if(args1.length != params1.length) {
					if(args1.length < minParams) {
						var str = "Invalid number of parameters. Got " + args1.length + ", required " + minParams;
						if(name != null) {
							str += " for function '" + name + "'";
						}
						throw new js__$Boot_HaxeError(str);
					}
					var args2 = [];
					var extraParams = args1.length - minParams;
					var pos = 0;
					var _g11 = 0;
					while(_g11 < params1.length) {
						var p2 = params1[_g11];
						++_g11;
						if(p2.opt) {
							if(extraParams > 0) {
								args2.push(args1[pos++]);
								--extraParams;
							} else {
								args2.push(null);
							}
						} else {
							args2.push(args1[pos++]);
						}
					}
					args1 = args2;
				}
				var old1 = me.locals;
				var depth = me.depth;
				me.depth++;
				me.locals = me.duplicate(capturedLocals);
				var _g12 = 0;
				var _g21 = params1.length;
				while(_g12 < _g21) {
					var i = _g12++;
					var key = params1[i].name;
					var _this3 = me.locals;
					var value1 = { r : args1[i]};
					if(__map_reserved[key] != null) {
						_this3.setReserved(key,value1);
					} else {
						_this3.h[key] = value1;
					}
				}
				var r = null;
				if(_gthis.inTry) {
					try {
						r = me.exprReturn(fexpr);
					} catch( e15 ) {
						var e16 = ((e15) instanceof js__$Boot_HaxeError) ? e15.val : e15;
						me.locals = old1;
						me.depth = depth;
						throw js__$Boot_HaxeError.wrap(e16);
					}
				} else {
					r = me.exprReturn(fexpr);
				}
				me.locals = old1;
				me.depth = depth;
				return r;
			};
			var f4 = Reflect.makeVarArgs(f3);
			if(name != null) {
				if(this.depth == 0) {
					var _this4 = this.variables;
					if(__map_reserved[name] != null) {
						_this4.setReserved(name,f4);
					} else {
						_this4.h[name] = f4;
					}
				} else {
					var tmp = this.declared;
					var _this5 = this.locals;
					var tmp1 = __map_reserved[name] != null ? _this5.getReserved(name) : _this5.h[name];
					tmp.push({ n : name, old : tmp1});
					var ref = { r : f4};
					var _this6 = this.locals;
					if(__map_reserved[name] != null) {
						_this6.setReserved(name,ref);
					} else {
						_this6.h[name] = ref;
					}
					if(__map_reserved[name] != null) {
						capturedLocals.setReserved(name,ref);
					} else {
						capturedLocals.h[name] = ref;
					}
				}
			}
			return f4;
		case 15:
			var e17 = e.e;
			this.returnValue = e17 == null ? null : this.expr(e17);
			throw new js__$Boot_HaxeError(hscript__$Interp_Stop.SReturn);
		case 16:
			var index = e.index;
			var e18 = e.e;
			var arr = this.expr(e18);
			var index1 = this.expr(index);
			if(js_Boot.__instanceof(arr,haxe_IMap)) {
				return (js_Boot.__cast(arr , haxe_IMap)).get(index1);
			} else {
				return arr[index1];
			}
			break;
		case 17:
			var arr1 = e.e;
			var tmp2;
			if(arr1.length > 0) {
				var _g3 = arr1[0];
				tmp2 = _g3._hx_index == 6 && _g3.op == "=>";
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				var isAllString = true;
				var isAllInt = true;
				var isAllObject = true;
				var isAllEnum = true;
				var keys = [];
				var values = [];
				var _g13 = 0;
				while(_g13 < arr1.length) {
					var e19 = arr1[_g13];
					++_g13;
					if(e19._hx_index == 6 && e19.op == "=>") {
						var eValue = e19.e2;
						var eKey = e19.e1;
						var key1 = this.expr(eKey);
						var value2 = this.expr(eValue);
						isAllString = isAllString && typeof(key1) == "string";
						isAllInt = isAllInt && (typeof(key1) == "number" && ((key1 | 0) === key1));
						isAllObject = isAllObject && Reflect.isObject(key1);
						isAllEnum = isAllEnum && Reflect.isEnumValue(key1);
						keys.push(key1);
						values.push(value2);
					} else {
						throw new js__$Boot_HaxeError("=> expected");
					}
				}
				var map;
				if(isAllInt) {
					map = new haxe_ds_IntMap();
				} else if(isAllString) {
					map = new haxe_ds_StringMap();
				} else if(isAllEnum) {
					map = new haxe_ds_EnumValueMap();
				} else if(isAllObject) {
					map = new haxe_ds_ObjectMap();
				} else {
					throw new js__$Boot_HaxeError("Inconsistent key types");
				}
				var _g22 = 0;
				var _g31 = keys.length;
				while(_g22 < _g31) {
					var n1 = _g22++;
					(js_Boot.__cast(map , haxe_IMap)).set(keys[n1],values[n1]);
				}
				return map;
			} else {
				var a = [];
				var _g14 = 0;
				while(_g14 < arr1.length) {
					var e20 = arr1[_g14];
					++_g14;
					a.push(this.expr(e20));
				}
				return a;
			}
			break;
		case 18:
			var params2 = e.params;
			var cl = e.cl;
			var a1 = [];
			var _g4 = 0;
			while(_g4 < params2.length) {
				var e23 = params2[_g4];
				++_g4;
				a1.push(this.expr(e23));
			}
			return this.cnew(cl,a1);
		case 19:
			var e24 = e.e;
			throw js__$Boot_HaxeError.wrap(this.expr(e24));
		case 20:
			var ecatch = e.ecatch;
			var n2 = e.v;
			var e25 = e.e;
			var old2 = this.declared.length;
			var oldTry = this.inTry;
			try {
				this.inTry = true;
				var v3 = this.expr(e25);
				this.restore(old2);
				this.inTry = oldTry;
				return v3;
			} catch( e26 ) {
				var e27 = ((e26) instanceof js__$Boot_HaxeError) ? e26.val : e26;
				if(js_Boot.__instanceof(e27,hscript__$Interp_Stop)) {
					this.inTry = oldTry;
					throw new js__$Boot_HaxeError(e27);
				} else {
					this.restore(old2);
					this.inTry = oldTry;
					var _this7 = this.locals;
					this.declared.push({ n : n2, old : __map_reserved[n2] != null ? _this7.getReserved(n2) : _this7.h[n2]});
					var _this8 = this.locals;
					var value3 = { r : e27};
					if(__map_reserved[n2] != null) {
						_this8.setReserved(n2,value3);
					} else {
						_this8.h[n2] = value3;
					}
					var v4 = this.expr(ecatch);
					this.restore(old2);
					return v4;
				}
			}
			break;
		case 21:
			var fl = e.fl;
			var o = { };
			var _g5 = 0;
			while(_g5 < fl.length) {
				var f5 = fl[_g5];
				++_g5;
				this.set(o,f5.name,this.expr(f5.e));
			}
			return o;
		case 22:
			var e28 = e.e2;
			var e110 = e.e1;
			var econd2 = e.cond;
			if(this.expr(econd2) == true) {
				return this.expr(e110);
			} else {
				return this.expr(e28);
			}
			break;
		case 23:
			var def = e.defaultExpr;
			var cases = e.cases;
			var e29 = e.e;
			var val = this.expr(e29);
			var match = false;
			var _g6 = 0;
			while(_g6 < cases.length) {
				var c1 = cases[_g6];
				++_g6;
				var _g7 = 0;
				var _g15 = c1.values;
				while(_g7 < _g15.length) {
					var v5 = _g15[_g7];
					++_g7;
					if(this.expr(v5) == val) {
						match = true;
						break;
					}
				}
				if(match) {
					val = this.expr(c1.expr);
					break;
				}
			}
			if(!match) {
				val = def == null ? null : this.expr(def);
			}
			return val;
		case 24:
			var e30 = e.e;
			var econd3 = e.cond;
			this.doWhileLoop(econd3,e30);
			return null;
		case 25:
			var e31 = e.e;
			return this.expr(e31);
		case 26:
			var e32 = e.e;
			return this.expr(e32);
		}
	}
	,doWhileLoop: function(econd,e) {
		var old = this.declared.length;
		_hx_loop1: while(true) {
			try {
				this.expr(e);
			} catch( err ) {
				var err1 = ((err) instanceof js__$Boot_HaxeError) ? err.val : err;
				if(js_Boot.__instanceof(err1,hscript__$Interp_Stop)) {
					var err2 = err1;
					switch(err2._hx_index) {
					case 0:
						break _hx_loop1;
					case 1:
						break;
					case 2:
						throw new js__$Boot_HaxeError(err2);
					}
				} else {
					throw err;
				}
			}
			if(!(this.expr(econd) == true)) {
				break;
			}
		}
		this.restore(old);
	}
	,whileLoop: function(econd,e) {
		var old = this.declared.length;
		_hx_loop1: while(this.expr(econd) == true) try {
			this.expr(e);
		} catch( err ) {
			var err1 = ((err) instanceof js__$Boot_HaxeError) ? err.val : err;
			if(js_Boot.__instanceof(err1,hscript__$Interp_Stop)) {
				var err2 = err1;
				switch(err2._hx_index) {
				case 0:
					break _hx_loop1;
				case 1:
					break;
				case 2:
					throw new js__$Boot_HaxeError(err2);
				}
			} else {
				throw err;
			}
		}
		this.restore(old);
	}
	,makeIterator: function(v) {
		try {
			v = $getIterator(v);
		} catch( e ) {
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		}
		if(v.hasNext == null || v.next == null) {
			var e2 = hscript_Error.EInvalidIterator(v);
			throw new js__$Boot_HaxeError(e2);
		}
		return v;
	}
	,forLoop: function(n,it,e) {
		var old = this.declared.length;
		var _this = this.locals;
		this.declared.push({ n : n, old : __map_reserved[n] != null ? _this.getReserved(n) : _this.h[n]});
		var it1 = this.makeIterator(this.expr(it));
		_hx_loop1: while(it1.hasNext()) {
			var this1 = this.locals;
			var value = { r : it1.next()};
			var _this1 = this1;
			if(__map_reserved[n] != null) {
				_this1.setReserved(n,value);
			} else {
				_this1.h[n] = value;
			}
			try {
				this.expr(e);
			} catch( err ) {
				var err1 = ((err) instanceof js__$Boot_HaxeError) ? err.val : err;
				if(js_Boot.__instanceof(err1,hscript__$Interp_Stop)) {
					var err2 = err1;
					switch(err2._hx_index) {
					case 0:
						break _hx_loop1;
					case 1:
						break;
					case 2:
						throw new js__$Boot_HaxeError(err2);
					}
				} else {
					throw err;
				}
			}
		}
		this.restore(old);
	}
	,isMap: function(o) {
		return js_Boot.__instanceof(o,haxe_IMap);
	}
	,getMapValue: function(map,key) {
		return (js_Boot.__cast(map , haxe_IMap)).get(key);
	}
	,setMapValue: function(map,key,value) {
		(js_Boot.__cast(map , haxe_IMap)).set(key,value);
	}
	,get: function(o,f) {
		if(o == null) {
			var e = hscript_Error.EInvalidAccess(f);
			throw new js__$Boot_HaxeError(e);
		}
		return Reflect.getProperty(o,f);
	}
	,set: function(o,f,v) {
		if(o == null) {
			var e = hscript_Error.EInvalidAccess(f);
			throw new js__$Boot_HaxeError(e);
		}
		Reflect.setProperty(o,f,v);
		return v;
	}
	,fcall: function(o,f,args) {
		return this.call(o,this.get(o,f),args);
	}
	,call: function(o,f,args) {
		return f.apply(o,args);
	}
	,cnew: function(cl,args) {
		var c = $hxClasses[cl];
		if(c == null) {
			c = this.resolve(cl);
		}
		return Type.createInstance(c,args);
	}
	,__class__: hscript_Interp
};
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = "Reflect";
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.isObject = function(v) {
	if(v == null) {
		return false;
	}
	var t = typeof(v);
	if(!(t == "string" || t == "object" && v.__enum__ == null)) {
		if(t == "function") {
			return (v.__name__ || v.__ename__) != null;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
Reflect.makeVarArgs = function(f) {
	return function() {
		var a = Array.prototype.slice.call(arguments);
		return f(a);
	};
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = "haxe.Log";
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos != null && infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			str += ", " + Std.string(v1);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = "Std";
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = "js.Boot";
js_Boot.getClass = function(o) {
	if(((o) instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s += "\t";
				var tmp = n + "(";
				var _g = [];
				var _g1 = 0;
				var _g2 = con.__params__;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					_g.push(js_Boot.__string_rec(o[p],s));
				}
				return tmp + _g.join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var l = o.length;
			var i;
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = l;
			while(_g3 < _g11) {
				var i1 = _g3++;
				str += (i1 > 0 ? "," : "") + js_Boot.__string_rec(o[i1],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if(((o) instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(((o) instanceof cl)) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return $hxEnums[o.__enum__] == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var hscript_Parser = function() {
	this.uid = 0;
	this.preprocesorValues = new haxe_ds_StringMap();
	this.line = 1;
	this.opChars = "+*/-=!><&|^%~";
	this.identChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_";
	var priorities = [["%"],["*","/"],["+","-"],["<<",">>",">>>"],["|","&","^"],["==","!=",">","<",">=","<="],["..."],["&&"],["||"],["=","+=","-=","*=","/=","%=","<<=",">>=",">>>=","|=","&=","^=","=>"]];
	this.opPriority = new haxe_ds_StringMap();
	this.opRightAssoc = new haxe_ds_StringMap();
	this.unops = new haxe_ds_StringMap();
	var _g = 0;
	var _g1 = priorities.length;
	while(_g < _g1) {
		var i = _g++;
		var _g2 = 0;
		var _g11 = priorities[i];
		while(_g2 < _g11.length) {
			var x = _g11[_g2];
			++_g2;
			var _this = this.opPriority;
			if(__map_reserved[x] != null) {
				_this.setReserved(x,i);
			} else {
				_this.h[x] = i;
			}
			if(i == 9) {
				var _this1 = this.opRightAssoc;
				if(__map_reserved[x] != null) {
					_this1.setReserved(x,true);
				} else {
					_this1.h[x] = true;
				}
			}
		}
	}
	var x1 = "!";
	var _this2 = this.unops;
	var value = x1 == "++" || x1 == "--";
	if(__map_reserved[x1] != null) {
		_this2.setReserved(x1,value);
	} else {
		_this2.h[x1] = value;
	}
	var x2 = "++";
	var _this3 = this.unops;
	var value1 = x2 == "++" || x2 == "--";
	if(__map_reserved[x2] != null) {
		_this3.setReserved(x2,value1);
	} else {
		_this3.h[x2] = value1;
	}
	var x3 = "--";
	var _this4 = this.unops;
	var value2 = x3 == "++" || x3 == "--";
	if(__map_reserved[x3] != null) {
		_this4.setReserved(x3,value2);
	} else {
		_this4.h[x3] = value2;
	}
	var x4 = "-";
	var _this5 = this.unops;
	var value3 = x4 == "++" || x4 == "--";
	if(__map_reserved[x4] != null) {
		_this5.setReserved(x4,value3);
	} else {
		_this5.h[x4] = value3;
	}
	var x5 = "~";
	var _this6 = this.unops;
	var value4 = x5 == "++" || x5 == "--";
	if(__map_reserved[x5] != null) {
		_this6.setReserved(x5,value4);
	} else {
		_this6.h[x5] = value4;
	}
};
$hxClasses["hscript.Parser"] = hscript_Parser;
hscript_Parser.__name__ = "hscript.Parser";
hscript_Parser.prototype = {
	error: function(err,pmin,pmax) {
		throw new js__$Boot_HaxeError(err);
	}
	,invalidChar: function(c) {
		throw new js__$Boot_HaxeError(hscript_Error.EInvalidChar(c));
	}
	,initParser: function(origin) {
		this.preprocStack = [];
		this.tokens = new haxe_ds_GenericStack();
		this.char = -1;
		this.ops = [];
		this.idents = [];
		this.uid = 0;
		var _g = 0;
		var _g1 = this.opChars.length;
		while(_g < _g1) {
			var i = _g++;
			this.ops[HxOverrides.cca(this.opChars,i)] = true;
		}
		var _g2 = 0;
		var _g3 = this.identChars.length;
		while(_g2 < _g3) {
			var i1 = _g2++;
			this.idents[HxOverrides.cca(this.identChars,i1)] = true;
		}
	}
	,parseString: function(s,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		return this.parse(new haxe_io_StringInput(s),origin);
	}
	,parse: function(s,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		this.initParser(origin);
		this.input = s;
		var a = [];
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				break;
			}
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			this.parseFullExpr(a);
		}
		if(a.length == 1) {
			return a[0];
		} else {
			return hscript_Expr.EBlock(a);
		}
	}
	,unexpected: function(tk) {
		throw new js__$Boot_HaxeError(hscript_Error.EUnexpected(this.tokenString(tk)));
	}
	,push: function(tk) {
		var _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(tk,_this.head);
	}
	,ensure: function(tk) {
		var t = this.token();
		if(t != tk) {
			this.unexpected(t);
		}
	}
	,ensureToken: function(tk) {
		var t = this.token();
		if(!Type.enumEq(t,tk)) {
			this.unexpected(t);
		}
	}
	,maybe: function(tk) {
		var t = this.token();
		if(Type.enumEq(t,tk)) {
			return true;
		}
		var _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(t,_this.head);
		return false;
	}
	,getIdent: function() {
		var tk = this.token();
		if(tk == null) {
			this.unexpected(tk);
			return null;
		} else if(tk._hx_index == 2) {
			var id = tk.s;
			return id;
		} else {
			this.unexpected(tk);
			return null;
		}
	}
	,expr: function(e) {
		return e;
	}
	,pmin: function(e) {
		return 0;
	}
	,pmax: function(e) {
		return 0;
	}
	,mk: function(e,pmin,pmax) {
		return e;
	}
	,isBlock: function(e) {
		switch(e._hx_index) {
		case 2:
			var e1 = e.e;
			var t = e.t;
			if(e1 != null) {
				return this.isBlock(e1);
			} else if(t != null) {
				if(t == null) {
					return false;
				} else if(t._hx_index == 2) {
					return true;
				} else {
					return false;
				}
			} else {
				return false;
			}
			break;
		case 6:
			var e2 = e.e2;
			return this.isBlock(e2);
		case 7:
			var e3 = e.e;
			var prefix = e.prefix;
			if(!prefix) {
				return this.isBlock(e3);
			} else {
				return false;
			}
			break;
		case 9:
			var e21 = e.e2;
			var e11 = e.e1;
			if(e21 != null) {
				return this.isBlock(e21);
			} else {
				return this.isBlock(e11);
			}
			break;
		case 10:
			var e4 = e.e;
			return this.isBlock(e4);
		case 11:
			var e5 = e.e;
			return this.isBlock(e5);
		case 14:
			var e6 = e.e;
			return this.isBlock(e6);
		case 15:
			var e7 = e.e;
			if(e7 != null) {
				return this.isBlock(e7);
			} else {
				return false;
			}
			break;
		case 20:
			var e8 = e.ecatch;
			return this.isBlock(e8);
		case 4:case 21:case 23:
			return true;
		case 24:
			var e9 = e.e;
			return this.isBlock(e9);
		case 25:
			var e10 = e.e;
			return this.isBlock(e10);
		default:
			return false;
		}
	}
	,parseFullExpr: function(exprs) {
		var e = this.parseExpr();
		exprs.push(e);
		var tk = this.token();
		while(tk == hscript_Token.TComma && e._hx_index == 2) {
			e = this.parseStructure("var");
			exprs.push(e);
			tk = this.token();
		}
		if(tk != hscript_Token.TSemicolon && tk != hscript_Token.TEof) {
			if(this.isBlock(e)) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
			} else {
				this.unexpected(tk);
			}
		}
	}
	,parseObject: function(p1) {
		var fl = [];
		_hx_loop1: while(true) {
			var tk = this.token();
			var id = null;
			if(tk == null) {
				this.unexpected(tk);
			} else {
				switch(tk._hx_index) {
				case 1:
					var c = tk.c;
					if(!this.allowJSON) {
						this.unexpected(tk);
					}
					if(c._hx_index == 2) {
						var s = c.s;
						id = s;
					} else {
						this.unexpected(tk);
					}
					break;
				case 2:
					var i = tk.s;
					id = i;
					break;
				case 7:
					break _hx_loop1;
				default:
					this.unexpected(tk);
				}
			}
			var t = this.token();
			if(t != hscript_Token.TDoubleDot) {
				this.unexpected(t);
			}
			fl.push({ name : id, e : this.parseExpr()});
			tk = this.token();
			if(tk == null) {
				this.unexpected(tk);
			} else {
				switch(tk._hx_index) {
				case 7:
					break _hx_loop1;
				case 9:
					break;
				default:
					this.unexpected(tk);
				}
			}
		}
		return this.parseExprNext(hscript_Expr.EObject(fl));
	}
	,parseExpr: function() {
		var tk = this.token();
		if(tk == null) {
			return this.unexpected(tk);
		} else {
			switch(tk._hx_index) {
			case 1:
				var c = tk.c;
				return this.parseExprNext(hscript_Expr.EConst(c));
			case 2:
				var id = tk.s;
				var e = this.parseStructure(id);
				if(e == null) {
					e = hscript_Expr.EIdent(id);
				}
				return this.parseExprNext(e);
			case 3:
				var op = tk.s;
				var _this = this.unops;
				if(__map_reserved[op] != null ? _this.existsReserved(op) : _this.h.hasOwnProperty(op)) {
					var start = 0;
					var e1 = this.parseExpr();
					if(op == "-") {
						if(e1._hx_index == 0) {
							switch(e1.c._hx_index) {
							case 0:
								var i = e1.c.v;
								return hscript_Expr.EConst(hscript_Const.CInt(-i));
							case 1:
								var f = e1.c.f;
								return hscript_Expr.EConst(hscript_Const.CFloat(-f));
							default:
							}
						}
					}
					return this.makeUnop(op,e1);
				}
				return this.unexpected(tk);
			case 4:
				var e2 = this.parseExpr();
				tk = this.token();
				if(tk != null) {
					switch(tk._hx_index) {
					case 5:
						return this.parseExprNext(hscript_Expr.EParent(e2));
					case 9:
						if(e2._hx_index == 1) {
							var v = e2.v;
							return this.parseLambda([{ name : v}],0);
						}
						break;
					case 14:
						var t = this.parseType();
						tk = this.token();
						if(tk != null) {
							switch(tk._hx_index) {
							case 5:
								return this.parseExprNext(hscript_Expr.ECheckType(e2,t));
							case 9:
								if(e2._hx_index == 1) {
									var v1 = e2.v;
									return this.parseLambda([{ name : v1, t : t}],0);
								}
								break;
							default:
							}
						}
						break;
					default:
					}
				}
				return this.unexpected(tk);
			case 6:
				tk = this.token();
				if(tk == null) {
					var _this1 = this.tokens;
					_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
				} else {
					switch(tk._hx_index) {
					case 1:
						var c1 = tk.c;
						if(this.allowJSON) {
							if(c1._hx_index == 2) {
								var tk2 = this.token();
								var _this2 = this.tokens;
								_this2.head = new haxe_ds_GenericCell(tk2,_this2.head);
								var _this3 = this.tokens;
								_this3.head = new haxe_ds_GenericCell(tk,_this3.head);
								if(tk2 != null) {
									if(tk2._hx_index == 14) {
										return this.parseExprNext(this.parseObject(0));
									}
								}
							} else {
								var _this4 = this.tokens;
								_this4.head = new haxe_ds_GenericCell(tk,_this4.head);
							}
						} else {
							var _this5 = this.tokens;
							_this5.head = new haxe_ds_GenericCell(tk,_this5.head);
						}
						break;
					case 2:
						var tk21 = this.token();
						var _this6 = this.tokens;
						_this6.head = new haxe_ds_GenericCell(tk21,_this6.head);
						var _this7 = this.tokens;
						_this7.head = new haxe_ds_GenericCell(tk,_this7.head);
						if(tk21 != null) {
							if(tk21._hx_index == 14) {
								return this.parseExprNext(this.parseObject(0));
							}
						}
						break;
					case 7:
						return this.parseExprNext(hscript_Expr.EObject([]));
					default:
						var _this8 = this.tokens;
						_this8.head = new haxe_ds_GenericCell(tk,_this8.head);
					}
				}
				var a = [];
				while(true) {
					this.parseFullExpr(a);
					tk = this.token();
					if(tk == hscript_Token.TBrClose) {
						break;
					}
					var _this9 = this.tokens;
					_this9.head = new haxe_ds_GenericCell(tk,_this9.head);
				}
				return hscript_Expr.EBlock(a);
			case 11:
				var a1 = [];
				tk = this.token();
				while(tk != hscript_Token.TBkClose) {
					var _this10 = this.tokens;
					_this10.head = new haxe_ds_GenericCell(tk,_this10.head);
					a1.push(this.parseExpr());
					tk = this.token();
					if(tk == hscript_Token.TComma) {
						tk = this.token();
					}
				}
				if(a1.length == 1) {
					switch(a1[0]._hx_index) {
					case 10:case 11:case 24:
						var tmp = "__a_" + this.uid++;
						var e3 = hscript_Expr.EBlock([hscript_Expr.EVar(tmp,null,hscript_Expr.EArrayDecl([])),this.mapCompr(tmp,a1[0]),hscript_Expr.EIdent(tmp)]);
						return this.parseExprNext(e3);
					default:
					}
				}
				return this.parseExprNext(hscript_Expr.EArrayDecl(a1));
			case 15:
				var id1 = tk.s;
				if(this.allowMetadata) {
					var args = this.parseMetaArgs();
					return hscript_Expr.EMeta(id1,args,this.parseExpr());
				} else {
					return this.unexpected(tk);
				}
				break;
			default:
				return this.unexpected(tk);
			}
		}
	}
	,parseLambda: function(args,pmin) {
		_hx_loop1: while(true) {
			var id = this.getIdent();
			var t = this.maybe(hscript_Token.TDoubleDot) ? this.parseType() : null;
			args.push({ name : id, t : t});
			var tk = this.token();
			if(tk == null) {
				this.unexpected(tk);
			} else {
				switch(tk._hx_index) {
				case 5:
					break _hx_loop1;
				case 9:
					break;
				default:
					this.unexpected(tk);
				}
			}
		}
		var t1 = this.token();
		if(!Type.enumEq(t1,hscript_Token.TOp("->"))) {
			this.unexpected(t1);
		}
		var eret = this.parseExpr();
		return hscript_Expr.EFunction(args,hscript_Expr.EReturn(eret));
	}
	,parseMetaArgs: function() {
		var tk = this.token();
		if(tk != hscript_Token.TPOpen) {
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			return null;
		}
		var args = [];
		tk = this.token();
		if(tk != hscript_Token.TPClose) {
			var _this1 = this.tokens;
			_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
			_hx_loop1: while(true) {
				args.push(this.parseExpr());
				var _g = this.token();
				if(_g == null) {
					var tk1 = _g;
					this.unexpected(tk1);
				} else {
					switch(_g._hx_index) {
					case 5:
						break _hx_loop1;
					case 9:
						break;
					default:
						var tk2 = _g;
						this.unexpected(tk2);
					}
				}
			}
		}
		return args;
	}
	,mapCompr: function(tmp,e) {
		var edef;
		switch(e._hx_index) {
		case 3:
			var e2 = e.e;
			edef = hscript_Expr.EParent(this.mapCompr(tmp,e2));
			break;
		case 4:
			if(e.e.length == 1) {
				var e1 = e.e[0];
				edef = hscript_Expr.EBlock([this.mapCompr(tmp,e1)]);
			} else {
				edef = hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
			}
			break;
		case 9:
			var e21 = e.e2;
			var e11 = e.e1;
			var cond = e.cond;
			edef = e21 == null ? hscript_Expr.EIf(cond,this.mapCompr(tmp,e11),null) : hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
			break;
		case 10:
			var e22 = e.e;
			var cond1 = e.cond;
			edef = hscript_Expr.EWhile(cond1,this.mapCompr(tmp,e22));
			break;
		case 11:
			var e23 = e.e;
			var it = e.it;
			var v = e.v;
			edef = hscript_Expr.EFor(v,it,this.mapCompr(tmp,e23));
			break;
		case 24:
			var e24 = e.e;
			var cond2 = e.cond;
			edef = hscript_Expr.EDoWhile(cond2,this.mapCompr(tmp,e24));
			break;
		default:
			edef = hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
		}
		return edef;
	}
	,makeUnop: function(op,e) {
		switch(e._hx_index) {
		case 6:
			var e2 = e.e2;
			var e1 = e.e1;
			var bop = e.op;
			return hscript_Expr.EBinop(bop,this.makeUnop(op,e1),e2);
		case 22:
			var e3 = e.e2;
			var e21 = e.e1;
			var e11 = e.cond;
			return hscript_Expr.ETernary(this.makeUnop(op,e11),e21,e3);
		default:
			return hscript_Expr.EUnop(op,true,e);
		}
	}
	,makeBinop: function(op,e1,e) {
		switch(e._hx_index) {
		case 6:
			var e3 = e.e2;
			var e2 = e.e1;
			var op2 = e.op;
			var tmp;
			var _this = this.opPriority;
			var tmp1 = __map_reserved[op] != null ? _this.getReserved(op) : _this.h[op];
			var _this1 = this.opPriority;
			if(tmp1 <= (__map_reserved[op2] != null ? _this1.getReserved(op2) : _this1.h[op2])) {
				var _this2 = this.opRightAssoc;
				tmp = !(__map_reserved[op] != null ? _this2.existsReserved(op) : _this2.h.hasOwnProperty(op));
			} else {
				tmp = false;
			}
			if(tmp) {
				return hscript_Expr.EBinop(op2,this.makeBinop(op,e1,e2),e3);
			} else {
				return hscript_Expr.EBinop(op,e1,e);
			}
			break;
		case 22:
			var e4 = e.e2;
			var e31 = e.e1;
			var e21 = e.cond;
			var _this3 = this.opRightAssoc;
			if(__map_reserved[op] != null ? _this3.existsReserved(op) : _this3.h.hasOwnProperty(op)) {
				return hscript_Expr.EBinop(op,e1,e);
			} else {
				return hscript_Expr.ETernary(this.makeBinop(op,e1,e21),e31,e4);
			}
			break;
		default:
			return hscript_Expr.EBinop(op,e1,e);
		}
	}
	,parseStructure: function(id) {
		switch(id) {
		case "break":
			return hscript_Expr.EBreak;
		case "continue":
			return hscript_Expr.EContinue;
		case "do":
			var e = this.parseExpr();
			var tk = this.token();
			if(tk == null) {
				this.unexpected(tk);
			} else if(!(tk._hx_index == 2 && tk.s == "while")) {
				this.unexpected(tk);
			}
			var econd = this.parseExpr();
			return hscript_Expr.EDoWhile(econd,e);
		case "else":
			return this.unexpected(hscript_Token.TId(id));
		case "for":
			var t = this.token();
			if(t != hscript_Token.TPOpen) {
				this.unexpected(t);
			}
			var vname = this.getIdent();
			var t1 = this.token();
			if(!Type.enumEq(t1,hscript_Token.TId("in"))) {
				this.unexpected(t1);
			}
			var eiter = this.parseExpr();
			var t2 = this.token();
			if(t2 != hscript_Token.TPClose) {
				this.unexpected(t2);
			}
			var e1 = this.parseExpr();
			return hscript_Expr.EFor(vname,eiter,e1);
		case "function":
			var tk1 = this.token();
			var name = null;
			if(tk1 == null) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk1,_this.head);
			} else if(tk1._hx_index == 2) {
				var id1 = tk1.s;
				name = id1;
			} else {
				var _this1 = this.tokens;
				_this1.head = new haxe_ds_GenericCell(tk1,_this1.head);
			}
			var inf = this.parseFunctionDecl();
			return hscript_Expr.EFunction(inf.args,inf.body,name,inf.ret);
		case "if":
			var t3 = this.token();
			if(t3 != hscript_Token.TPOpen) {
				this.unexpected(t3);
			}
			var cond = this.parseExpr();
			var t4 = this.token();
			if(t4 != hscript_Token.TPClose) {
				this.unexpected(t4);
			}
			var e11 = this.parseExpr();
			var e2 = null;
			var semic = false;
			var tk2 = this.token();
			if(tk2 == hscript_Token.TSemicolon) {
				semic = true;
				tk2 = this.token();
			}
			if(Type.enumEq(tk2,hscript_Token.TId("else"))) {
				e2 = this.parseExpr();
			} else {
				var _this2 = this.tokens;
				_this2.head = new haxe_ds_GenericCell(tk2,_this2.head);
				if(semic) {
					var _this3 = this.tokens;
					_this3.head = new haxe_ds_GenericCell(hscript_Token.TSemicolon,_this3.head);
				}
			}
			return hscript_Expr.EIf(cond,e11,e2);
		case "inline":
			if(!this.maybe(hscript_Token.TId("function"))) {
				this.unexpected(hscript_Token.TId("inline"));
			}
			return this.parseStructure("function");
		case "new":
			var a = [];
			a.push(this.getIdent());
			var next = true;
			while(next) {
				var tk3 = this.token();
				if(tk3 == null) {
					this.unexpected(tk3);
				} else {
					switch(tk3._hx_index) {
					case 4:
						next = false;
						break;
					case 8:
						a.push(this.getIdent());
						break;
					default:
						this.unexpected(tk3);
					}
				}
			}
			var args = this.parseExprList(hscript_Token.TPClose);
			return hscript_Expr.ENew(a.join("."),args);
		case "return":
			var tk4 = this.token();
			var _this4 = this.tokens;
			_this4.head = new haxe_ds_GenericCell(tk4,_this4.head);
			var e3 = tk4 == hscript_Token.TSemicolon ? null : this.parseExpr();
			return hscript_Expr.EReturn(e3);
		case "switch":
			var e4 = this.parseExpr();
			var def = null;
			var cases = [];
			var t5 = this.token();
			if(t5 != hscript_Token.TBrOpen) {
				this.unexpected(t5);
			}
			_hx_loop2: while(true) {
				var tk5 = this.token();
				if(tk5 == null) {
					this.unexpected(tk5);
				} else {
					switch(tk5._hx_index) {
					case 2:
						switch(tk5.s) {
						case "case":
							var c = { values : [], expr : null};
							cases.push(c);
							_hx_loop3: while(true) {
								var e5 = this.parseExpr();
								c.values.push(e5);
								tk5 = this.token();
								if(tk5 == null) {
									this.unexpected(tk5);
								} else {
									switch(tk5._hx_index) {
									case 9:
										break;
									case 14:
										break _hx_loop3;
									default:
										this.unexpected(tk5);
									}
								}
							}
							var exprs = [];
							_hx_loop4: while(true) {
								tk5 = this.token();
								var _this5 = this.tokens;
								_this5.head = new haxe_ds_GenericCell(tk5,_this5.head);
								if(tk5 == null) {
									this.parseFullExpr(exprs);
								} else {
									switch(tk5._hx_index) {
									case 2:
										switch(tk5.s) {
										case "case":case "default":
											break _hx_loop4;
										default:
											this.parseFullExpr(exprs);
										}
										break;
									case 7:
										break _hx_loop4;
									default:
										this.parseFullExpr(exprs);
									}
								}
							}
							c.expr = exprs.length == 1 ? exprs[0] : exprs.length == 0 ? hscript_Expr.EBlock([]) : hscript_Expr.EBlock(exprs);
							break;
						case "default":
							if(def != null) {
								this.unexpected(tk5);
							}
							var t6 = this.token();
							if(t6 != hscript_Token.TDoubleDot) {
								this.unexpected(t6);
							}
							var exprs1 = [];
							_hx_loop5: while(true) {
								tk5 = this.token();
								var _this6 = this.tokens;
								_this6.head = new haxe_ds_GenericCell(tk5,_this6.head);
								if(tk5 == null) {
									this.parseFullExpr(exprs1);
								} else {
									switch(tk5._hx_index) {
									case 2:
										switch(tk5.s) {
										case "case":case "default":
											break _hx_loop5;
										default:
											this.parseFullExpr(exprs1);
										}
										break;
									case 7:
										break _hx_loop5;
									default:
										this.parseFullExpr(exprs1);
									}
								}
							}
							def = exprs1.length == 1 ? exprs1[0] : exprs1.length == 0 ? hscript_Expr.EBlock([]) : hscript_Expr.EBlock(exprs1);
							break;
						default:
							this.unexpected(tk5);
						}
						break;
					case 7:
						break _hx_loop2;
					default:
						this.unexpected(tk5);
					}
				}
			}
			return hscript_Expr.ESwitch(e4,cases,def);
		case "throw":
			var e6 = this.parseExpr();
			return hscript_Expr.EThrow(e6);
		case "try":
			var e7 = this.parseExpr();
			var t7 = this.token();
			if(!Type.enumEq(t7,hscript_Token.TId("catch"))) {
				this.unexpected(t7);
			}
			var t8 = this.token();
			if(t8 != hscript_Token.TPOpen) {
				this.unexpected(t8);
			}
			var vname1 = this.getIdent();
			var t9 = this.token();
			if(t9 != hscript_Token.TDoubleDot) {
				this.unexpected(t9);
			}
			var t10 = null;
			if(this.allowTypes) {
				t10 = this.parseType();
			} else {
				var t11 = this.token();
				if(!Type.enumEq(t11,hscript_Token.TId("Dynamic"))) {
					this.unexpected(t11);
				}
			}
			var t12 = this.token();
			if(t12 != hscript_Token.TPClose) {
				this.unexpected(t12);
			}
			var ec = this.parseExpr();
			return hscript_Expr.ETry(e7,vname1,t10,ec);
		case "var":
			var ident = this.getIdent();
			var tk6 = this.token();
			var t13 = null;
			if(tk6 == hscript_Token.TDoubleDot && this.allowTypes) {
				t13 = this.parseType();
				tk6 = this.token();
			}
			var e8 = null;
			if(Type.enumEq(tk6,hscript_Token.TOp("="))) {
				e8 = this.parseExpr();
			} else {
				var _this7 = this.tokens;
				_this7.head = new haxe_ds_GenericCell(tk6,_this7.head);
			}
			return hscript_Expr.EVar(ident,t13,e8);
		case "while":
			var econd1 = this.parseExpr();
			var e9 = this.parseExpr();
			return hscript_Expr.EWhile(econd1,e9);
		default:
			return null;
		}
	}
	,parseExprNext: function(e1) {
		var tk = this.token();
		if(tk == null) {
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			return e1;
		} else {
			switch(tk._hx_index) {
			case 3:
				var op = tk.s;
				if(op == "->") {
					switch(e1._hx_index) {
					case 1:
						var i = e1.v;
						var eret = this.parseExpr();
						return hscript_Expr.EFunction([{ name : i}],hscript_Expr.EReturn(eret));
					case 3:
						var _hx_tmp = e1.e;
						if(_hx_tmp._hx_index == 1) {
							var i1 = _hx_tmp.v;
							var eret1 = this.parseExpr();
							return hscript_Expr.EFunction([{ name : i1}],hscript_Expr.EReturn(eret1));
						}
						break;
					case 26:
						var _hx_tmp1 = e1.e;
						if(_hx_tmp1._hx_index == 1) {
							var t = e1.t;
							var i2 = _hx_tmp1.v;
							var eret2 = this.parseExpr();
							return hscript_Expr.EFunction([{ name : i2, t : t}],hscript_Expr.EReturn(eret2));
						}
						break;
					default:
					}
					this.unexpected(tk);
				}
				var _this1 = this.unops;
				if(__map_reserved[op] != null ? _this1.getReserved(op) : _this1.h[op]) {
					if(this.isBlock(e1) || e1._hx_index == 3) {
						var _this2 = this.tokens;
						_this2.head = new haxe_ds_GenericCell(tk,_this2.head);
						return e1;
					}
					return this.parseExprNext(hscript_Expr.EUnop(op,false,e1));
				}
				return this.makeBinop(op,e1,this.parseExpr());
			case 4:
				return this.parseExprNext(hscript_Expr.ECall(e1,this.parseExprList(hscript_Token.TPClose)));
			case 8:
				var field = this.getIdent();
				return this.parseExprNext(hscript_Expr.EField(e1,field));
			case 11:
				var e2 = this.parseExpr();
				var t1 = this.token();
				if(t1 != hscript_Token.TBkClose) {
					this.unexpected(t1);
				}
				return this.parseExprNext(hscript_Expr.EArray(e1,e2));
			case 13:
				var e21 = this.parseExpr();
				var t2 = this.token();
				if(t2 != hscript_Token.TDoubleDot) {
					this.unexpected(t2);
				}
				var e3 = this.parseExpr();
				return hscript_Expr.ETernary(e1,e21,e3);
			default:
				var _this3 = this.tokens;
				_this3.head = new haxe_ds_GenericCell(tk,_this3.head);
				return e1;
			}
		}
	}
	,parseFunctionArgs: function() {
		var args = [];
		var tk = this.token();
		if(tk != hscript_Token.TPClose) {
			var done = false;
			while(!done) {
				var name = null;
				var opt = false;
				if(tk != null) {
					if(tk._hx_index == 13) {
						opt = true;
						tk = this.token();
					}
				}
				if(tk == null) {
					this.unexpected(tk);
				} else if(tk._hx_index == 2) {
					var id = tk.s;
					name = id;
				} else {
					this.unexpected(tk);
				}
				var arg = { name : name};
				args.push(arg);
				if(opt) {
					arg.opt = true;
				}
				if(this.allowTypes) {
					if(this.maybe(hscript_Token.TDoubleDot)) {
						arg.t = this.parseType();
					}
					if(this.maybe(hscript_Token.TOp("="))) {
						arg.value = this.parseExpr();
					}
				}
				tk = this.token();
				if(tk == null) {
					this.unexpected(tk);
				} else {
					switch(tk._hx_index) {
					case 5:
						done = true;
						break;
					case 9:
						tk = this.token();
						break;
					default:
						this.unexpected(tk);
					}
				}
			}
		}
		return args;
	}
	,parseFunctionDecl: function() {
		var t = this.token();
		if(t != hscript_Token.TPOpen) {
			this.unexpected(t);
		}
		var args = this.parseFunctionArgs();
		var ret = null;
		if(this.allowTypes) {
			var tk = this.token();
			if(tk != hscript_Token.TDoubleDot) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
			} else {
				ret = this.parseType();
			}
		}
		return { args : args, ret : ret, body : this.parseExpr()};
	}
	,parsePath: function() {
		var path = [this.getIdent()];
		while(true) {
			var t = this.token();
			if(t != hscript_Token.TDot) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(t,_this.head);
				break;
			}
			path.push(this.getIdent());
		}
		return path;
	}
	,parseType: function() {
		var _gthis = this;
		var t = this.token();
		if(t == null) {
			return this.unexpected(t);
		} else {
			switch(t._hx_index) {
			case 2:
				var v = t.s;
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(t,_this.head);
				var path = this.parsePath();
				var params = null;
				t = this.token();
				if(t == null) {
					var _this1 = this.tokens;
					_this1.head = new haxe_ds_GenericCell(t,_this1.head);
				} else if(t._hx_index == 3) {
					var op = t.s;
					if(op == "<") {
						params = [];
						_hx_loop1: while(true) {
							params.push(this.parseType());
							t = this.token();
							if(t != null) {
								switch(t._hx_index) {
								case 3:
									var op1 = t.s;
									if(op1 == ">") {
										break _hx_loop1;
									}
									if(HxOverrides.cca(op1,0) == 62) {
										var _this2 = this.tokens;
										_this2.head = new haxe_ds_GenericCell(hscript_Token.TOp(HxOverrides.substr(op1,1,null)),_this2.head);
										break _hx_loop1;
									}
									break;
								case 9:
									continue;
								default:
								}
							}
							this.unexpected(t);
						}
					} else {
						var _this3 = this.tokens;
						_this3.head = new haxe_ds_GenericCell(t,_this3.head);
					}
				} else {
					var _this4 = this.tokens;
					_this4.head = new haxe_ds_GenericCell(t,_this4.head);
				}
				return this.parseTypeNext(hscript_CType.CTPath(path,params));
			case 4:
				var a = this.token();
				var b = this.token();
				var _this5 = this.tokens;
				_this5.head = new haxe_ds_GenericCell(b,_this5.head);
				var _this6 = this.tokens;
				_this6.head = new haxe_ds_GenericCell(a,_this6.head);
				var withReturn = function(args) {
					var _g = _gthis.token();
					if(_g == null) {
						var t1 = _g;
						_gthis.unexpected(t1);
					} else if(!(_g._hx_index == 3 && _g.s == "->")) {
						var t2 = _g;
						_gthis.unexpected(t2);
					}
					return hscript_CType.CTFun(args,_gthis.parseType());
				};
				if(a == null) {
					var t3 = this.parseType();
					var _g1 = this.token();
					if(_g1 == null) {
						var t4 = _g1;
						return this.unexpected(t4);
					} else {
						switch(_g1._hx_index) {
						case 5:
							return this.parseTypeNext(hscript_CType.CTParent(t3));
						case 9:
							var args1 = [t3];
							while(true) {
								args1.push(this.parseType());
								if(!this.maybe(hscript_Token.TComma)) {
									break;
								}
							}
							var t5 = this.token();
							if(t5 != hscript_Token.TPClose) {
								this.unexpected(t5);
							}
							return withReturn(args1);
						default:
							var t6 = _g1;
							return this.unexpected(t6);
						}
					}
				} else {
					switch(a._hx_index) {
					case 2:
						if(b == null) {
							var t7 = this.parseType();
							var _g2 = this.token();
							if(_g2 == null) {
								var t8 = _g2;
								return this.unexpected(t8);
							} else {
								switch(_g2._hx_index) {
								case 5:
									return this.parseTypeNext(hscript_CType.CTParent(t7));
								case 9:
									var args2 = [t7];
									while(true) {
										args2.push(this.parseType());
										if(!this.maybe(hscript_Token.TComma)) {
											break;
										}
									}
									var t9 = this.token();
									if(t9 != hscript_Token.TPClose) {
										this.unexpected(t9);
									}
									return withReturn(args2);
								default:
									var t10 = _g2;
									return this.unexpected(t10);
								}
							}
						} else if(b._hx_index == 14) {
							var _g3 = [];
							var _g11 = 0;
							var _g21 = this.parseFunctionArgs();
							while(_g11 < _g21.length) {
								var arg = _g21[_g11];
								++_g11;
								var _g12 = arg.value;
								if(_g12 != null) {
									var v1 = _g12;
									throw new js__$Boot_HaxeError(hscript_Error.ECustom("Default values not allowed in function types"));
								}
								_g3.push(hscript_CType.CTNamed(arg.name,arg.opt ? hscript_CType.CTOpt(arg.t) : arg.t));
							}
							var args3 = _g3;
							return withReturn(args3);
						} else {
							var t11 = this.parseType();
							var _g4 = this.token();
							if(_g4 == null) {
								var t12 = _g4;
								return this.unexpected(t12);
							} else {
								switch(_g4._hx_index) {
								case 5:
									return this.parseTypeNext(hscript_CType.CTParent(t11));
								case 9:
									var args4 = [t11];
									while(true) {
										args4.push(this.parseType());
										if(!this.maybe(hscript_Token.TComma)) {
											break;
										}
									}
									var t13 = this.token();
									if(t13 != hscript_Token.TPClose) {
										this.unexpected(t13);
									}
									return withReturn(args4);
								default:
									var t14 = _g4;
									return this.unexpected(t14);
								}
							}
						}
						break;
					case 5:
						var _g5 = [];
						var _g13 = 0;
						var _g22 = this.parseFunctionArgs();
						while(_g13 < _g22.length) {
							var arg1 = _g22[_g13];
							++_g13;
							var _g14 = arg1.value;
							if(_g14 != null) {
								var v2 = _g14;
								throw new js__$Boot_HaxeError(hscript_Error.ECustom("Default values not allowed in function types"));
							}
							_g5.push(hscript_CType.CTNamed(arg1.name,arg1.opt ? hscript_CType.CTOpt(arg1.t) : arg1.t));
						}
						var args5 = _g5;
						return withReturn(args5);
					default:
						var t15 = this.parseType();
						var _g6 = this.token();
						if(_g6 == null) {
							var t16 = _g6;
							return this.unexpected(t16);
						} else {
							switch(_g6._hx_index) {
							case 5:
								return this.parseTypeNext(hscript_CType.CTParent(t15));
							case 9:
								var args6 = [t15];
								while(true) {
									args6.push(this.parseType());
									if(!this.maybe(hscript_Token.TComma)) {
										break;
									}
								}
								var t17 = this.token();
								if(t17 != hscript_Token.TPClose) {
									this.unexpected(t17);
								}
								return withReturn(args6);
							default:
								var t18 = _g6;
								return this.unexpected(t18);
							}
						}
					}
				}
				break;
			case 6:
				var fields = [];
				var meta = null;
				_hx_loop8: while(true) {
					t = this.token();
					if(t == null) {
						this.unexpected(t);
					} else {
						switch(t._hx_index) {
						case 2:
							if(t.s == "var") {
								var name = this.getIdent();
								var t19 = this.token();
								if(t19 != hscript_Token.TDoubleDot) {
									this.unexpected(t19);
								}
								fields.push({ name : name, t : this.parseType(), meta : meta});
								meta = null;
								var t20 = this.token();
								if(t20 != hscript_Token.TSemicolon) {
									this.unexpected(t20);
								}
							} else {
								var name1 = t.s;
								var t21 = this.token();
								if(t21 != hscript_Token.TDoubleDot) {
									this.unexpected(t21);
								}
								fields.push({ name : name1, t : this.parseType(), meta : meta});
								t = this.token();
								if(t == null) {
									this.unexpected(t);
								} else {
									switch(t._hx_index) {
									case 7:
										break _hx_loop8;
									case 9:
										break;
									default:
										this.unexpected(t);
									}
								}
							}
							break;
						case 7:
							break _hx_loop8;
						case 15:
							var name2 = t.s;
							if(meta == null) {
								meta = [];
							}
							meta.push({ name : name2, params : this.parseMetaArgs()});
							break;
						default:
							this.unexpected(t);
						}
					}
				}
				return this.parseTypeNext(hscript_CType.CTAnon(fields));
			default:
				return this.unexpected(t);
			}
		}
	}
	,parseTypeNext: function(t) {
		var tk = this.token();
		if(tk == null) {
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			return t;
		} else if(tk._hx_index == 3) {
			var op = tk.s;
			if(op != "->") {
				var _this1 = this.tokens;
				_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
				return t;
			}
		} else {
			var _this2 = this.tokens;
			_this2.head = new haxe_ds_GenericCell(tk,_this2.head);
			return t;
		}
		var t2 = this.parseType();
		if(t2._hx_index == 1) {
			var args = t2.args;
			args.unshift(t);
			return t2;
		} else {
			return hscript_CType.CTFun([t],t2);
		}
	}
	,parseExprList: function(etk) {
		var args = [];
		var tk = this.token();
		if(tk == etk) {
			return args;
		}
		var _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(tk,_this.head);
		while(true) {
			args.push(this.parseExpr());
			tk = this.token();
			if(tk == null) {
				if(tk == etk) {
					break;
				}
				this.unexpected(tk);
			} else if(tk._hx_index != 9) {
				if(tk == etk) {
					break;
				}
				this.unexpected(tk);
			}
		}
		return args;
	}
	,parseModule: function(content,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		this.initParser(origin);
		this.input = new haxe_io_StringInput(content);
		this.allowTypes = true;
		this.allowMetadata = true;
		var decls = [];
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				break;
			}
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			decls.push(this.parseModuleDecl());
		}
		return decls;
	}
	,parseMetadata: function() {
		var meta = [];
		while(true) {
			var tk = this.token();
			if(tk == null) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				break;
			} else if(tk._hx_index == 15) {
				var name = tk.s;
				meta.push({ name : name, params : this.parseMetaArgs()});
			} else {
				var _this1 = this.tokens;
				_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
				break;
			}
		}
		return meta;
	}
	,parseParams: function() {
		if(this.maybe(hscript_Token.TOp("<"))) {
			throw new js__$Boot_HaxeError(hscript_Error.EInvalidOp("Unsupported class type parameters"));
		}
		return { };
	}
	,parseModuleDecl: function() {
		var meta = this.parseMetadata();
		var ident = this.getIdent();
		var isPrivate = false;
		var isExtern = false;
		_hx_loop1: while(true) {
			switch(ident) {
			case "extern":
				isExtern = true;
				break;
			case "private":
				isPrivate = true;
				break;
			default:
				break _hx_loop1;
			}
			ident = this.getIdent();
		}
		switch(ident) {
		case "class":
			var name = this.getIdent();
			var params = this.parseParams();
			var extend = null;
			var implement = [];
			_hx_loop2: while(true) {
				var t = this.token();
				if(t == null) {
					var _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(t,_this.head);
					break;
				} else if(t._hx_index == 2) {
					switch(t.s) {
					case "extends":
						extend = this.parseType();
						break;
					case "implements":
						implement.push(this.parseType());
						break;
					default:
						var _this1 = this.tokens;
						_this1.head = new haxe_ds_GenericCell(t,_this1.head);
						break _hx_loop2;
					}
				} else {
					var _this2 = this.tokens;
					_this2.head = new haxe_ds_GenericCell(t,_this2.head);
					break;
				}
			}
			var fields = [];
			var t1 = this.token();
			if(t1 != hscript_Token.TBrOpen) {
				this.unexpected(t1);
			}
			while(!this.maybe(hscript_Token.TBrClose)) fields.push(this.parseField());
			return hscript_ModuleDecl.DClass({ name : name, meta : meta, params : params, extend : extend, implement : implement, fields : fields, isPrivate : isPrivate, isExtern : isExtern});
		case "import":
			var path = [this.getIdent()];
			var star = false;
			while(true) {
				var t2 = this.token();
				if(t2 != hscript_Token.TDot) {
					var _this3 = this.tokens;
					_this3.head = new haxe_ds_GenericCell(t2,_this3.head);
					break;
				}
				t2 = this.token();
				if(t2 == null) {
					this.unexpected(t2);
				} else {
					switch(t2._hx_index) {
					case 2:
						var id = t2.s;
						path.push(id);
						break;
					case 3:
						if(t2.s == "*") {
							star = true;
						} else {
							this.unexpected(t2);
						}
						break;
					default:
						this.unexpected(t2);
					}
				}
			}
			var t3 = this.token();
			if(t3 != hscript_Token.TSemicolon) {
				this.unexpected(t3);
			}
			return hscript_ModuleDecl.DImport(path,star);
		case "package":
			var path1 = this.parsePath();
			var t4 = this.token();
			if(t4 != hscript_Token.TSemicolon) {
				this.unexpected(t4);
			}
			return hscript_ModuleDecl.DPackage(path1);
		case "typedef":
			var name1 = this.getIdent();
			var params1 = this.parseParams();
			var t5 = this.token();
			if(!Type.enumEq(t5,hscript_Token.TOp("="))) {
				this.unexpected(t5);
			}
			var t6 = this.parseType();
			return hscript_ModuleDecl.DTypedef({ name : name1, meta : meta, params : params1, isPrivate : isPrivate, t : t6});
		default:
			this.unexpected(hscript_Token.TId(ident));
		}
		return null;
	}
	,parseField: function() {
		var meta = this.parseMetadata();
		var access = [];
		while(true) {
			var id = this.getIdent();
			switch(id) {
			case "function":
				var name = this.getIdent();
				var inf = this.parseFunctionDecl();
				return { name : name, meta : meta, access : access, kind : hscript_FieldKind.KFunction({ args : inf.args, expr : inf.body, ret : inf.ret})};
			case "inline":
				access.push(hscript_FieldAccess.AInline);
				break;
			case "macro":
				access.push(hscript_FieldAccess.AMacro);
				break;
			case "override":
				access.push(hscript_FieldAccess.AOverride);
				break;
			case "private":
				access.push(hscript_FieldAccess.APrivate);
				break;
			case "public":
				access.push(hscript_FieldAccess.APublic);
				break;
			case "static":
				access.push(hscript_FieldAccess.AStatic);
				break;
			case "var":
				var name1 = this.getIdent();
				var get = null;
				var set = null;
				if(this.maybe(hscript_Token.TPOpen)) {
					get = this.getIdent();
					var t = this.token();
					if(t != hscript_Token.TComma) {
						this.unexpected(t);
					}
					set = this.getIdent();
					var t1 = this.token();
					if(t1 != hscript_Token.TPClose) {
						this.unexpected(t1);
					}
				}
				var type = this.maybe(hscript_Token.TDoubleDot) ? this.parseType() : null;
				var expr = this.maybe(hscript_Token.TOp("=")) ? this.parseExpr() : null;
				if(expr != null) {
					if(this.isBlock(expr)) {
						this.maybe(hscript_Token.TSemicolon);
					} else {
						var t2 = this.token();
						if(t2 != hscript_Token.TSemicolon) {
							this.unexpected(t2);
						}
					}
				} else if(type != null && (type == null ? false : type._hx_index == 2)) {
					this.maybe(hscript_Token.TSemicolon);
				} else {
					var t3 = this.token();
					if(t3 != hscript_Token.TSemicolon) {
						this.unexpected(t3);
					}
				}
				return { name : name1, meta : meta, access : access, kind : hscript_FieldKind.KVar({ get : get, set : set, type : type, expr : expr})};
			default:
				this.unexpected(hscript_Token.TId(id));
			}
		}
	}
	,incPos: function() {
	}
	,readChar: function() {
		try {
			return this.input.readByte();
		} catch( e ) {
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			return 0;
		}
	}
	,readString: function(until) {
		var c = 0;
		var b = new haxe_io_BytesOutput();
		var esc = false;
		var old = this.line;
		var s = this.input;
		while(true) {
			try {
				c = s.readByte();
			} catch( e ) {
				var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
				this.line = old;
				throw new js__$Boot_HaxeError(hscript_Error.EUnterminatedString);
			}
			if(esc) {
				esc = false;
				switch(c) {
				case 34:case 39:case 92:
					b.writeByte(c);
					break;
				case 47:
					if(this.allowJSON) {
						b.writeByte(c);
					} else {
						this.invalidChar(c);
					}
					break;
				case 110:
					b.writeByte(10);
					break;
				case 114:
					b.writeByte(13);
					break;
				case 116:
					b.writeByte(9);
					break;
				case 117:
					if(!this.allowJSON) {
						this.invalidChar(c);
					}
					var code = null;
					try {
						code = s.readString(4);
					} catch( e2 ) {
						var e3 = ((e2) instanceof js__$Boot_HaxeError) ? e2.val : e2;
						this.line = old;
						throw new js__$Boot_HaxeError(hscript_Error.EUnterminatedString);
					}
					var k = 0;
					k <<= 4;
					var char = HxOverrides.cca(code,0);
					if(char == null) {
						this.invalidChar(char);
					} else {
						switch(char) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							k += char - 48;
							break;
						case 65:case 66:case 67:case 68:case 69:case 70:
							k += char - 55;
							break;
						case 97:case 98:case 99:case 100:case 101:case 102:
							k += char - 87;
							break;
						default:
							this.invalidChar(char);
						}
					}
					k <<= 4;
					var char1 = HxOverrides.cca(code,1);
					if(char1 == null) {
						this.invalidChar(char1);
					} else {
						switch(char1) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							k += char1 - 48;
							break;
						case 65:case 66:case 67:case 68:case 69:case 70:
							k += char1 - 55;
							break;
						case 97:case 98:case 99:case 100:case 101:case 102:
							k += char1 - 87;
							break;
						default:
							this.invalidChar(char1);
						}
					}
					k <<= 4;
					var char2 = HxOverrides.cca(code,2);
					if(char2 == null) {
						this.invalidChar(char2);
					} else {
						switch(char2) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							k += char2 - 48;
							break;
						case 65:case 66:case 67:case 68:case 69:case 70:
							k += char2 - 55;
							break;
						case 97:case 98:case 99:case 100:case 101:case 102:
							k += char2 - 87;
							break;
						default:
							this.invalidChar(char2);
						}
					}
					k <<= 4;
					var char3 = HxOverrides.cca(code,3);
					if(char3 == null) {
						this.invalidChar(char3);
					} else {
						switch(char3) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							k += char3 - 48;
							break;
						case 65:case 66:case 67:case 68:case 69:case 70:
							k += char3 - 55;
							break;
						case 97:case 98:case 99:case 100:case 101:case 102:
							k += char3 - 87;
							break;
						default:
							this.invalidChar(char3);
						}
					}
					if(k <= 127) {
						b.writeByte(k);
					} else if(k <= 2047) {
						b.writeByte(192 | k >> 6);
						b.writeByte(128 | k & 63);
					} else {
						b.writeByte(224 | k >> 12);
						b.writeByte(128 | k >> 6 & 63);
						b.writeByte(128 | k & 63);
					}
					break;
				default:
					this.invalidChar(c);
				}
			} else if(c == 92) {
				esc = true;
			} else if(c == until) {
				break;
			} else {
				if(c == 10) {
					this.line++;
				}
				b.writeByte(c);
			}
		}
		return b.getBytes().toString();
	}
	,token: function() {
		if(this.tokens.head != null) {
			var _this = this.tokens;
			var k = _this.head;
			if(k == null) {
				return null;
			} else {
				_this.head = k.next;
				return k.elt;
			}
		}
		var char;
		if(this.char < 0) {
			char = this.readChar();
		} else {
			char = this.char;
			this.char = -1;
		}
		while(true) {
			switch(char) {
			case 0:
				return hscript_Token.TEof;
			case 10:
				this.line++;
				break;
			case 9:case 13:case 32:
				break;
			case 35:
				char = this.readChar();
				if(this.idents[char]) {
					var id = String.fromCodePoint(char);
					while(true) {
						char = this.readChar();
						if(!this.idents[char]) {
							this.char = char;
							return this.preprocess(id);
						}
						id += String.fromCodePoint(char);
					}
				}
				this.invalidChar(char);
				break;
			case 34:case 39:
				return hscript_Token.TConst(hscript_Const.CString(this.readString(char)));
			case 40:
				return hscript_Token.TPOpen;
			case 41:
				return hscript_Token.TPClose;
			case 44:
				return hscript_Token.TComma;
			case 46:
				char = this.readChar();
				switch(char) {
				case 46:
					char = this.readChar();
					if(char != 46) {
						this.invalidChar(char);
					}
					return hscript_Token.TOp("...");
				case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
					var n = char - 48;
					var exp = 1;
					while(true) {
						char = this.readChar();
						exp *= 10;
						switch(char) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							n = n * 10 + (char - 48);
							break;
						default:
							this.char = char;
							return hscript_Token.TConst(hscript_Const.CFloat(n / exp));
						}
					}
					break;
				default:
					this.char = char;
					return hscript_Token.TDot;
				}
				break;
			case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
				var n1 = (char - 48) * 1.0;
				var exp1 = 0.;
				while(true) {
					char = this.readChar();
					exp1 *= 10;
					switch(char) {
					case 46:
						if(exp1 > 0) {
							if(exp1 == 10 && this.readChar() == 46) {
								var _this1 = this.tokens;
								_this1.head = new haxe_ds_GenericCell(hscript_Token.TOp("..."),_this1.head);
								var i = n1 | 0;
								return hscript_Token.TConst(i == n1 ? hscript_Const.CInt(i) : hscript_Const.CFloat(n1));
							}
							this.invalidChar(char);
						}
						exp1 = 1.;
						break;
					case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
						n1 = n1 * 10 + (char - 48);
						break;
					case 69:case 101:
						var tk = this.token();
						var pow = null;
						if(tk == null) {
							var _this2 = this.tokens;
							_this2.head = new haxe_ds_GenericCell(tk,_this2.head);
						} else {
							switch(tk._hx_index) {
							case 1:
								if(tk.c._hx_index == 0) {
									var e = tk.c.v;
									pow = e;
								} else {
									var _this3 = this.tokens;
									_this3.head = new haxe_ds_GenericCell(tk,_this3.head);
								}
								break;
							case 3:
								if(tk.s == "-") {
									tk = this.token();
									if(tk == null) {
										var _this4 = this.tokens;
										_this4.head = new haxe_ds_GenericCell(tk,_this4.head);
									} else if(tk._hx_index == 1 && tk.c._hx_index == 0) {
										var e1 = tk.c.v;
										pow = -e1;
									} else {
										var _this5 = this.tokens;
										_this5.head = new haxe_ds_GenericCell(tk,_this5.head);
									}
								} else {
									var _this6 = this.tokens;
									_this6.head = new haxe_ds_GenericCell(tk,_this6.head);
								}
								break;
							default:
								var _this7 = this.tokens;
								_this7.head = new haxe_ds_GenericCell(tk,_this7.head);
							}
						}
						if(pow == null) {
							this.invalidChar(char);
						}
						return hscript_Token.TConst(hscript_Const.CFloat(Math.pow(10,pow) / exp1 * n1 * 10));
					case 120:
						if(n1 > 0 || exp1 > 0) {
							this.invalidChar(char);
						}
						var n2 = 0;
						while(true) {
							char = this.readChar();
							switch(char) {
							case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
								n2 = (n2 << 4) + char - 48;
								break;
							case 65:case 66:case 67:case 68:case 69:case 70:
								n2 = (n2 << 4) + (char - 55);
								break;
							case 97:case 98:case 99:case 100:case 101:case 102:
								n2 = (n2 << 4) + (char - 87);
								break;
							default:
								this.char = char;
								return hscript_Token.TConst(hscript_Const.CInt(n2));
							}
						}
						break;
					default:
						this.char = char;
						var i1 = n1 | 0;
						return hscript_Token.TConst(exp1 > 0 ? hscript_Const.CFloat(n1 * 10 / exp1) : i1 == n1 ? hscript_Const.CInt(i1) : hscript_Const.CFloat(n1));
					}
				}
				break;
			case 58:
				return hscript_Token.TDoubleDot;
			case 59:
				return hscript_Token.TSemicolon;
			case 61:
				char = this.readChar();
				if(char == 61) {
					return hscript_Token.TOp("==");
				} else if(char == 62) {
					return hscript_Token.TOp("=>");
				}
				this.char = char;
				return hscript_Token.TOp("=");
			case 63:
				return hscript_Token.TQuestion;
			case 64:
				char = this.readChar();
				if(this.idents[char] || char == 58) {
					var id1 = String.fromCodePoint(char);
					while(true) {
						char = this.readChar();
						if(!this.idents[char]) {
							this.char = char;
							return hscript_Token.TMeta(id1);
						}
						id1 += String.fromCodePoint(char);
					}
				}
				this.invalidChar(char);
				break;
			case 91:
				return hscript_Token.TBkOpen;
			case 93:
				return hscript_Token.TBkClose;
			case 123:
				return hscript_Token.TBrOpen;
			case 125:
				return hscript_Token.TBrClose;
			default:
				if(this.ops[char]) {
					var op = String.fromCodePoint(char);
					var prev = -1;
					while(true) {
						char = this.readChar();
						if(!this.ops[char] || prev == 61) {
							if(HxOverrides.cca(op,0) == 47) {
								return this.tokenComment(op,char);
							}
							this.char = char;
							return hscript_Token.TOp(op);
						}
						prev = char;
						op += String.fromCodePoint(char);
					}
				}
				if(this.idents[char]) {
					var id2 = String.fromCodePoint(char);
					while(true) {
						char = this.readChar();
						if(!this.idents[char]) {
							this.char = char;
							return hscript_Token.TId(id2);
						}
						id2 += String.fromCodePoint(char);
					}
				}
				this.invalidChar(char);
			}
			char = this.readChar();
		}
	}
	,preprocValue: function(id) {
		var _this = this.preprocesorValues;
		if(__map_reserved[id] != null) {
			return _this.getReserved(id);
		} else {
			return _this.h[id];
		}
	}
	,parsePreproCond: function() {
		var tk = this.token();
		if(tk == null) {
			return this.unexpected(tk);
		} else {
			switch(tk._hx_index) {
			case 2:
				var id = tk.s;
				return hscript_Expr.EIdent(id);
			case 3:
				if(tk.s == "!") {
					return hscript_Expr.EUnop("!",true,this.parsePreproCond());
				} else {
					return this.unexpected(tk);
				}
				break;
			case 4:
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(hscript_Token.TPOpen,_this.head);
				return this.parseExpr();
			default:
				return this.unexpected(tk);
			}
		}
	}
	,evalPreproCond: function(e) {
		switch(e._hx_index) {
		case 1:
			var id = e.v;
			return this.preprocValue(id) != null;
		case 3:
			var e1 = e.e;
			return this.evalPreproCond(e1);
		case 6:
			switch(e.op) {
			case "&&":
				var e2 = e.e2;
				var e11 = e.e1;
				if(this.evalPreproCond(e11)) {
					return this.evalPreproCond(e2);
				} else {
					return false;
				}
				break;
			case "||":
				var e21 = e.e2;
				var e12 = e.e1;
				if(!this.evalPreproCond(e12)) {
					return this.evalPreproCond(e21);
				} else {
					return true;
				}
				break;
			default:
				throw new js__$Boot_HaxeError(hscript_Error.EInvalidPreprocessor("Can't eval " + $hxEnums[e.__enum__].__constructs__[e._hx_index]));
			}
			break;
		case 7:
			if(e.op == "!") {
				var e3 = e.e;
				return !this.evalPreproCond(e3);
			} else {
				throw new js__$Boot_HaxeError(hscript_Error.EInvalidPreprocessor("Can't eval " + $hxEnums[e.__enum__].__constructs__[e._hx_index]));
			}
			break;
		default:
			throw new js__$Boot_HaxeError(hscript_Error.EInvalidPreprocessor("Can't eval " + $hxEnums[e.__enum__].__constructs__[e._hx_index]));
		}
	}
	,preprocess: function(id) {
		switch(id) {
		case "else":case "elseif":
			if(this.preprocStack.length > 0) {
				if(this.preprocStack[this.preprocStack.length - 1].r) {
					this.preprocStack[this.preprocStack.length - 1].r = false;
					this.skipTokens();
					return this.token();
				} else if(id == "else") {
					this.preprocStack.pop();
					this.preprocStack.push({ r : true});
					return this.token();
				} else {
					this.preprocStack.pop();
					return this.preprocess("if");
				}
			} else {
				return hscript_Token.TPrepro(id);
			}
			break;
		case "end":
			if(this.preprocStack.length > 0) {
				this.preprocStack.pop();
				return this.token();
			} else {
				return hscript_Token.TPrepro(id);
			}
			break;
		case "if":
			var e = this.parsePreproCond();
			if(this.evalPreproCond(e)) {
				this.preprocStack.push({ r : true});
				return this.token();
			}
			this.preprocStack.push({ r : false});
			this.skipTokens();
			return this.token();
		default:
			return hscript_Token.TPrepro(id);
		}
	}
	,skipTokens: function() {
		var spos = this.preprocStack.length - 1;
		var obj = this.preprocStack[spos];
		var pos = 0;
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				throw new js__$Boot_HaxeError(hscript_Error.EInvalidPreprocessor("Unclosed"));
			}
			if(this.preprocStack[spos] != obj) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				break;
			}
		}
	}
	,tokenComment: function(op,char) {
		var c = HxOverrides.cca(op,1);
		var s = this.input;
		if(c == 47) {
			try {
				while(char != 13 && char != 10) char = s.readByte();
				this.char = char;
			} catch( e ) {
				var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			}
			return this.token();
		}
		if(c == 42) {
			var old = this.line;
			if(op == "/**/") {
				this.char = char;
				return this.token();
			}
			try {
				while(true) {
					while(char != 42) {
						if(char == 10) {
							this.line++;
						}
						char = s.readByte();
					}
					char = s.readByte();
					if(char == 47) {
						break;
					}
				}
			} catch( e2 ) {
				var e3 = ((e2) instanceof js__$Boot_HaxeError) ? e2.val : e2;
				this.line = old;
				throw new js__$Boot_HaxeError(hscript_Error.EUnterminatedComment);
			}
			return this.token();
		}
		this.char = char;
		return hscript_Token.TOp(op);
	}
	,constString: function(c) {
		switch(c._hx_index) {
		case 0:
			var v = c.v;
			if(v == null) {
				return "null";
			} else {
				return "" + v;
			}
			break;
		case 1:
			var f = c.f;
			if(f == null) {
				return "null";
			} else {
				return "" + f;
			}
			break;
		case 2:
			var s = c.s;
			return s;
		}
	}
	,tokenString: function(t) {
		switch(t._hx_index) {
		case 0:
			return "<eof>";
		case 1:
			var c = t.c;
			return this.constString(c);
		case 2:
			var s = t.s;
			return s;
		case 3:
			var s1 = t.s;
			return s1;
		case 4:
			return "(";
		case 5:
			return ")";
		case 6:
			return "{";
		case 7:
			return "}";
		case 8:
			return ".";
		case 9:
			return ",";
		case 10:
			return ";";
		case 11:
			return "[";
		case 12:
			return "]";
		case 13:
			return "?";
		case 14:
			return ":";
		case 15:
			var id = t.s;
			return "@" + id;
		case 16:
			var id1 = t.s;
			return "#" + id1;
		}
	}
	,__class__: hscript_Parser
};
var Console = function() { };
$hxClasses["Console"] = Console;
Console.__name__ = "Console";
Console.main = function() {
	Console.init();
	Console.run();
};
Console.init = function() {
	haxedb_sys_System.init();
	var this1 = { };
	var dbApi = this1;
	var key = Console.api.keys();
	while(key.hasNext()) {
		var key1 = key.next();
		var _this = Console.api;
		dbApi[key1] = __map_reserved[key1] != null ? _this.getReserved(key1) : _this.h[key1];
	}
	haxe_Log.trace("api: " + Std.string(dbApi),{ fileName : "src/Console.hx", lineNumber : 25, className : "Console", methodName : "init"});
	var _this1 = Console.interp.variables;
	if(__map_reserved["db"] != null) {
		_this1.setReserved("db",dbApi);
	} else {
		_this1.h["db"] = dbApi;
	}
	Console.printInstructions();
};
Console.printInstructions = function() {
	haxe_Log.trace("API:",{ fileName : "src/Console.hx", lineNumber : 31, className : "Console", methodName : "printInstructions"});
	haxe_Log.trace("_________",{ fileName : "src/Console.hx", lineNumber : 32, className : "Console", methodName : "printInstructions"});
	var key = Console.apiDefinitions.keys();
	while(key.hasNext()) {
		var key1 = key.next();
		var _this = Console.apiDefinitions;
		haxe_Log.trace("" + key1 + " - " + (__map_reserved[key1] != null ? _this.getReserved(key1) : _this.h[key1]),{ fileName : "src/Console.hx", lineNumber : 34, className : "Console", methodName : "printInstructions"});
	}
};
Console.teardown = function() {
	haxedb_sys_System.teardown();
};
Console.run = function() {
	if(Console.rl == null) {
		Console.rl = js_node_Readline.createInterface(process.stdin,process.stdout);
	}
	Console.rl.question(Console.getIndent(),function(_input) {
		var input = StringTools.trim(_input);
		if(input != ".end" && input != "") {
			if(input == ".exit") {
				Console.teardown();
				Console.rl.close();
			} else if(input == ".abort") {
				Console.scriptLines = [];
				Console.run();
			} else {
				Console.scriptLines.push(input);
				Console.run();
			}
		} else {
			var script = Console.scriptLines.join("\n");
			try {
				haxe_Log.trace("script: " + script,{ fileName : "src/Console.hx", lineNumber : 73, className : "Console", methodName : "run"});
				var ast = Console.parser.parseString(script);
				haxe_Log.trace(Console.interp.execute(ast),{ fileName : "src/Console.hx", lineNumber : 75, className : "Console", methodName : "run"});
			} catch( error ) {
				haxe_Log.trace("ERROR: " + Std.string(((error) instanceof js__$Boot_HaxeError) ? error.val : error),{ fileName : "src/Console.hx", lineNumber : 77, className : "Console", methodName : "run"});
			}
			Console.scriptLines = [];
			Console.run();
		}
		return;
	});
};
Console.getIndent = function() {
	var retVal = ">>";
	var _g = 0;
	var _g1 = Console.indents;
	while(_g < _g1) {
		var i = _g++;
		retVal += "  ";
	}
	return retVal;
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = "HxOverrides";
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.strDate = function(s) {
	switch(s.length) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var IntIterator = function(min,max) {
	this.min = min;
	this.max = max;
};
$hxClasses["IntIterator"] = IntIterator;
IntIterator.__name__ = "IntIterator";
IntIterator.prototype = {
	hasNext: function() {
		return this.min < this.max;
	}
	,next: function() {
		return this.min++;
	}
	,__class__: IntIterator
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = "Lambda";
Lambda.iter = function(it,f) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		f(x1);
	}
};
Lambda.find = function(it,f) {
	var v = $getIterator(it);
	while(v.hasNext()) {
		var v1 = v.next();
		if(f(v1)) {
			return v1;
		}
	}
	return null;
};
Math.__name__ = "Math";
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = "StringBuf";
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = "StringTools";
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
var ValueType = $hxEnums["ValueType"] = { __ename__ : "ValueType", __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"]
	,TNull: {_hx_index:0,__enum__:"ValueType",toString:$estr}
	,TInt: {_hx_index:1,__enum__:"ValueType",toString:$estr}
	,TFloat: {_hx_index:2,__enum__:"ValueType",toString:$estr}
	,TBool: {_hx_index:3,__enum__:"ValueType",toString:$estr}
	,TObject: {_hx_index:4,__enum__:"ValueType",toString:$estr}
	,TFunction: {_hx_index:5,__enum__:"ValueType",toString:$estr}
	,TClass: ($_=function(c) { return {_hx_index:6,c:c,__enum__:"ValueType",toString:$estr}; },$_.__params__ = ["c"],$_)
	,TEnum: ($_=function(e) { return {_hx_index:7,e:e,__enum__:"ValueType",toString:$estr}; },$_.__params__ = ["e"],$_)
	,TUnknown: {_hx_index:8,__enum__:"ValueType",toString:$estr}
};
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = "Type";
Type.createInstance = function(cl,args) {
	return new (Function.prototype.bind.apply(cl,[null].concat(args)));
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw new js__$Boot_HaxeError("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type["typeof"] = function(v) {
	switch(typeof(v)) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum($hxEnums[e]);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumEq = function(a,b) {
	if(a == b) {
		return true;
	}
	try {
		var e = a.__enum__;
		if(e == null || e != b.__enum__) {
			return false;
		}
		if(a._hx_index != b._hx_index) {
			return false;
		}
		var enm = $hxEnums[e];
		var ctorName = enm.__constructs__[a._hx_index];
		var params = enm[ctorName].__params__;
		var _g = 0;
		while(_g < params.length) {
			var f = params[_g];
			++_g;
			if(!Type.enumEq(a[f],b[f])) {
				return false;
			}
		}
	} catch( e1 ) {
		var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
		return false;
	}
	return true;
};
Type.enumParameters = function(e) {
	var enm = $hxEnums[e.__enum__];
	var ctorName = enm.__constructs__[e._hx_index];
	var params = enm[ctorName].__params__;
	if(params != null) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < params.length) {
			var p = params[_g1];
			++_g1;
			_g.push(e[p]);
		}
		return _g;
	} else {
		return [];
	}
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = "haxe.IMap";
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe_Serializer = function() {
	this.buf = new StringBuf();
	this.cache = [];
	this.useCache = haxe_Serializer.USE_CACHE;
	this.useEnumIndex = haxe_Serializer.USE_ENUM_INDEX;
	this.shash = new haxe_ds_StringMap();
	this.scount = 0;
};
$hxClasses["haxe.Serializer"] = haxe_Serializer;
haxe_Serializer.__name__ = "haxe.Serializer";
haxe_Serializer.run = function(v) {
	var s = new haxe_Serializer();
	s.serialize(v);
	return s.toString();
};
haxe_Serializer.prototype = {
	toString: function() {
		return this.buf.b;
	}
	,serializeString: function(s) {
		var _this = this.shash;
		var x = __map_reserved[s] != null ? _this.getReserved(s) : _this.h[s];
		if(x != null) {
			this.buf.b += "R";
			this.buf.b += x == null ? "null" : "" + x;
			return;
		}
		var _this1 = this.shash;
		var value = this.scount++;
		if(__map_reserved[s] != null) {
			_this1.setReserved(s,value);
		} else {
			_this1.h[s] = value;
		}
		this.buf.b += "y";
		s = encodeURIComponent(s);
		this.buf.b += Std.string(s.length);
		this.buf.b += ":";
		this.buf.b += s == null ? "null" : "" + s;
	}
	,serializeRef: function(v) {
		var vt = typeof(v);
		var _g = 0;
		var _g1 = this.cache.length;
		while(_g < _g1) {
			var i = _g++;
			var ci = this.cache[i];
			if(typeof(ci) == vt && ci == v) {
				this.buf.b += "r";
				this.buf.b += i == null ? "null" : "" + i;
				return true;
			}
		}
		this.cache.push(v);
		return false;
	}
	,serializeFields: function(v) {
		var _g = 0;
		var _g1 = Reflect.fields(v);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.serializeString(f);
			this.serialize(Reflect.field(v,f));
		}
		this.buf.b += "g";
	}
	,serialize: function(v) {
		var _g = Type["typeof"](v);
		switch(_g._hx_index) {
		case 0:
			this.buf.b += "n";
			break;
		case 1:
			var v1 = v;
			if(v1 == 0) {
				this.buf.b += "z";
				return;
			}
			this.buf.b += "i";
			this.buf.b += v1 == null ? "null" : "" + v1;
			break;
		case 2:
			var v2 = v;
			if(isNaN(v2)) {
				this.buf.b += "k";
			} else if(!isFinite(v2)) {
				this.buf.b += v2 < 0 ? "m" : "p";
			} else {
				this.buf.b += "d";
				this.buf.b += v2 == null ? "null" : "" + v2;
			}
			break;
		case 3:
			this.buf.b += v ? "t" : "f";
			break;
		case 4:
			if(js_Boot.__instanceof(v,Class)) {
				var className = v.__name__;
				this.buf.b += "A";
				this.serializeString(className);
			} else if(js_Boot.__instanceof(v,Enum)) {
				this.buf.b += "B";
				this.serializeString(v.__ename__);
			} else {
				if(this.useCache && this.serializeRef(v)) {
					return;
				}
				this.buf.b += "o";
				this.serializeFields(v);
			}
			break;
		case 5:
			throw new js__$Boot_HaxeError("Cannot serialize function");
		case 6:
			var c = _g.c;
			if(c == String) {
				this.serializeString(v);
				return;
			}
			if(this.useCache && this.serializeRef(v)) {
				return;
			}
			switch(c) {
			case Array:
				var ucount = 0;
				this.buf.b += "a";
				var l = v["length"];
				var _g1 = 0;
				var _g11 = l;
				while(_g1 < _g11) {
					var i = _g1++;
					if(v[i] == null) {
						++ucount;
					} else {
						if(ucount > 0) {
							if(ucount == 1) {
								this.buf.b += "n";
							} else {
								this.buf.b += "u";
								this.buf.b += ucount == null ? "null" : "" + ucount;
							}
							ucount = 0;
						}
						this.serialize(v[i]);
					}
				}
				if(ucount > 0) {
					if(ucount == 1) {
						this.buf.b += "n";
					} else {
						this.buf.b += "u";
						this.buf.b += ucount == null ? "null" : "" + ucount;
					}
				}
				this.buf.b += "h";
				break;
			case Date:
				var d = v;
				this.buf.b += "v";
				this.buf.b += Std.string(d.getTime());
				break;
			case haxe_ds_IntMap:
				this.buf.b += "q";
				var v3 = v;
				var k = v3.keys();
				while(k.hasNext()) {
					var k1 = k.next();
					this.buf.b += ":";
					this.buf.b += k1 == null ? "null" : "" + k1;
					this.serialize(v3.h[k1]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_List:
				this.buf.b += "l";
				var v4 = v;
				var _g_head = v4.h;
				while(_g_head != null) {
					var val = _g_head.item;
					_g_head = _g_head.next;
					var i1 = val;
					this.serialize(i1);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_ObjectMap:
				this.buf.b += "M";
				var v5 = v;
				var k2 = v5.keys();
				while(k2.hasNext()) {
					var k3 = k2.next();
					var id = Reflect.field(k3,"__id__");
					Reflect.deleteField(k3,"__id__");
					this.serialize(k3);
					k3["__id__"] = id;
					this.serialize(v5.h[k3.__id__]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_StringMap:
				this.buf.b += "b";
				var v6 = v;
				var k4 = v6.keys();
				while(k4.hasNext()) {
					var k5 = k4.next();
					this.serializeString(k5);
					this.serialize(__map_reserved[k5] != null ? v6.getReserved(k5) : v6.h[k5]);
				}
				this.buf.b += "h";
				break;
			case haxe_io_Bytes:
				var v7 = v;
				this.buf.b += "s";
				this.buf.b += Std.string(Math.ceil(v7.length * 8 / 6));
				this.buf.b += ":";
				var i2 = 0;
				var max = v7.length - 2;
				var b64 = haxe_Serializer.BASE64_CODES;
				if(b64 == null) {
					var this1 = new Array(haxe_Serializer.BASE64.length);
					b64 = this1;
					var _g2 = 0;
					var _g12 = haxe_Serializer.BASE64.length;
					while(_g2 < _g12) {
						var i3 = _g2++;
						b64[i3] = HxOverrides.cca(haxe_Serializer.BASE64,i3);
					}
					haxe_Serializer.BASE64_CODES = b64;
				}
				while(i2 < max) {
					var b1 = v7.b[i2++];
					var b2 = v7.b[i2++];
					var b3 = v7.b[i2++];
					this.buf.b += String.fromCodePoint(b64[b1 >> 2]);
					this.buf.b += String.fromCodePoint(b64[(b1 << 4 | b2 >> 4) & 63]);
					this.buf.b += String.fromCodePoint(b64[(b2 << 2 | b3 >> 6) & 63]);
					this.buf.b += String.fromCodePoint(b64[b3 & 63]);
				}
				if(i2 == max) {
					var b11 = v7.b[i2++];
					var b21 = v7.b[i2++];
					this.buf.b += String.fromCodePoint(b64[b11 >> 2]);
					this.buf.b += String.fromCodePoint(b64[(b11 << 4 | b21 >> 4) & 63]);
					this.buf.b += String.fromCodePoint(b64[b21 << 2 & 63]);
				} else if(i2 == max + 1) {
					var b12 = v7.b[i2++];
					this.buf.b += String.fromCodePoint(b64[b12 >> 2]);
					this.buf.b += String.fromCodePoint(b64[b12 << 4 & 63]);
				}
				break;
			default:
				if(this.useCache) {
					this.cache.pop();
				}
				if(v.hxSerialize != null) {
					this.buf.b += "C";
					this.serializeString(c.__name__);
					if(this.useCache) {
						this.cache.push(v);
					}
					v.hxSerialize(this);
					this.buf.b += "g";
				} else {
					this.buf.b += "c";
					this.serializeString(c.__name__);
					if(this.useCache) {
						this.cache.push(v);
					}
					this.serializeFields(v);
				}
			}
			break;
		case 7:
			var e = _g.e;
			if(this.useCache) {
				if(this.serializeRef(v)) {
					return;
				}
				this.cache.pop();
			}
			this.buf.b += Std.string(this.useEnumIndex ? "j" : "w");
			this.serializeString(e.__ename__);
			if(this.useEnumIndex) {
				this.buf.b += ":";
				this.buf.b += Std.string(v._hx_index);
			} else {
				var e1 = v;
				this.serializeString($hxEnums[e1.__enum__].__constructs__[e1._hx_index]);
			}
			this.buf.b += ":";
			var params = Type.enumParameters(v);
			this.buf.b += Std.string(params.length);
			var _g3 = 0;
			while(_g3 < params.length) {
				var p = params[_g3];
				++_g3;
				this.serialize(p);
			}
			if(this.useCache) {
				this.cache.push(v);
			}
			break;
		default:
			throw new js__$Boot_HaxeError("Cannot serialize " + Std.string(v));
		}
	}
	,__class__: haxe_Serializer
};
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = "haxe._Unserializer.DefaultResolver";
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return $hxClasses[name];
	}
	,resolveEnum: function(name) {
		return $hxEnums[name];
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = "haxe.Unserializer";
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g = 0;
	var _g1 = haxe_Unserializer.BASE64.length;
	while(_g < _g1) {
		var i = _g++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.run = function(v) {
	return new haxe_Unserializer(v).unserialize();
};
haxe_Unserializer.prototype = {
	readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		return parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw new js__$Boot_HaxeError("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw new js__$Boot_HaxeError("Invalid object key");
			}
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw new js__$Boot_HaxeError("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		switch(this.buf.charCodeAt(this.pos++)) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw new js__$Boot_HaxeError("Class not found " + name);
			}
			return cl;
		case 66:
			var name1 = this.unserialize();
			var e = this.resolver.resolveEnum(name1);
			if(e == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name1);
			}
			return e;
		case 67:
			var name2 = this.unserialize();
			var cl1 = this.resolver.resolveClass(name2);
			if(cl1 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name2);
			}
			var o = Object.create(cl1.prototype);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw new js__$Boot_HaxeError("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				h.set(s,this.unserialize());
			}
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw new js__$Boot_HaxeError("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var buf1 = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n1 = this.readDigits();
					a[a.length + n1 - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h1 = new haxe_ds_StringMap();
			this.cache.push(h1);
			var buf2 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s1 = this.unserialize();
				var value = this.unserialize();
				if(__map_reserved[s1] != null) {
					h1.setReserved(s1,value);
				} else {
					h1.h[s1] = value;
				}
			}
			this.pos++;
			return h1;
		case 99:
			var name3 = this.unserialize();
			var cl2 = this.resolver.resolveClass(name3);
			if(cl2 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name3);
			}
			var o1 = Object.create(cl2.prototype);
			this.cache.push(o1);
			this.unserializeObject(o1);
			return o1;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name4 = this.unserialize();
			var edecl = this.resolver.resolveEnum(name4);
			if(edecl == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name4);
			}
			this.pos++;
			var index = this.readDigits();
			var tag = edecl.__constructs__.slice()[index];
			if(tag == null) {
				throw new js__$Boot_HaxeError("Unknown enum index " + name4 + "@" + index);
			}
			var e1 = this.unserializeEnum(edecl,tag);
			this.cache.push(e1);
			return e1;
		case 107:
			return NaN;
		case 108:
			var l = new haxe_ds_List();
			this.cache.push(l);
			var buf3 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o2 = { };
			this.cache.push(o2);
			this.unserializeObject(o2);
			return o2;
		case 112:
			return Infinity;
		case 113:
			var h2 = new haxe_ds_IntMap();
			this.cache.push(h2);
			var buf4 = this.buf;
			var c1 = this.buf.charCodeAt(this.pos++);
			while(c1 == 58) {
				var i = this.readDigits();
				var value1 = this.unserialize();
				h2.h[i] = value1;
				c1 = this.buf.charCodeAt(this.pos++);
			}
			if(c1 != 104) {
				throw new js__$Boot_HaxeError("Invalid IntMap format");
			}
			return h2;
		case 114:
			var n2 = this.readDigits();
			if(n2 < 0 || n2 >= this.cache.length) {
				throw new js__$Boot_HaxeError("Invalid reference");
			}
			return this.cache[n2];
		case 115:
			var len = this.readDigits();
			var buf5 = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw new js__$Boot_HaxeError("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i1 = this.pos;
			var rest = len & 3;
			var size = (len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0);
			var max = i1 + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer(size));
			var bpos = 0;
			while(i1 < max) {
				var c11 = codes[buf5.charCodeAt(i1++)];
				var c2 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = c11 << 2 | c2 >> 4;
				var c3 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				var c4 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = c3 << 6 | c4;
			}
			if(rest >= 2) {
				var c12 = codes[buf5.charCodeAt(i1++)];
				var c21 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = c12 << 2 | c21 >> 4;
				if(rest == 3) {
					var c31 = codes[buf5.charCodeAt(i1++)];
					bytes.b[bpos++] = c21 << 4 | c31 >> 2;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				d = new Date(this.readFloat());
			}
			this.cache.push(d);
			return d;
		case 119:
			var name5 = this.unserialize();
			var edecl1 = this.resolver.resolveEnum(name5);
			if(edecl1 == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name5);
			}
			var e2 = this.unserializeEnum(edecl1,this.unserialize());
			this.cache.push(e2);
			return e2;
		case 120:
			throw js__$Boot_HaxeError.wrap(this.unserialize());
		case 121:
			var len1 = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len1) {
				throw new js__$Boot_HaxeError("Invalid string length");
			}
			var s2 = HxOverrides.substr(this.buf,this.pos,len1);
			this.pos += len1;
			s2 = decodeURIComponent(s2.split("+").join(" "));
			this.scache.push(s2);
			return s2;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_ds_BalancedTree = function() {
};
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = "haxe.ds.BalancedTree";
haxe_ds_BalancedTree.__interfaces__ = [haxe_IMap];
haxe_ds_BalancedTree.prototype = {
	set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this2 = r.right;
			var _this3 = r.left;
			if((_this2 == null ? 0 : _this2._height) > (_this3 == null ? 0 : _this3._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this2 = this.left;
			tmp = _this2 == null ? 0 : _this2._height;
		} else {
			var _this3 = this.right;
			tmp = _this3 == null ? 0 : _this3._height;
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = "haxe.ds.TreeNode";
haxe_ds_TreeNode.prototype = {
	__class__: haxe_ds_TreeNode
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = "haxe.ds.EnumValueMap";
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1._hx_index - k2._hx_index;
		if(d != 0) {
			return d;
		}
		var p1 = Type.enumParameters(k1);
		var p2 = Type.enumParameters(k2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g = 0;
		var _g1 = a1.length;
		while(_g < _g1) {
			var i = _g++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if(((v1) instanceof Array) && v1.__enum__ == null && (((v2) instanceof Array) && v2.__enum__ == null)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_GenericCell = function(elt,next) {
	this.elt = elt;
	this.next = next;
};
$hxClasses["haxe.ds.GenericCell"] = haxe_ds_GenericCell;
haxe_ds_GenericCell.__name__ = "haxe.ds.GenericCell";
haxe_ds_GenericCell.prototype = {
	__class__: haxe_ds_GenericCell
};
var haxe_ds_GenericStack = function() {
};
$hxClasses["haxe.ds.GenericStack"] = haxe_ds_GenericStack;
haxe_ds_GenericStack.__name__ = "haxe.ds.GenericStack";
haxe_ds_GenericStack.prototype = {
	__class__: haxe_ds_GenericStack
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = "haxe.ds.IntMap";
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) this.h.hasOwnProperty(key) ? a.push(key | 0) : null;
		return HxOverrides.iter(a);
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_List = function() {
	this.length = 0;
};
$hxClasses["haxe.ds.List"] = haxe_ds_List;
haxe_ds_List.__name__ = "haxe.ds.List";
haxe_ds_List.prototype = {
	add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["haxe.ds._List.ListNode"] = haxe_ds__$List_ListNode;
haxe_ds__$List_ListNode.__name__ = "haxe.ds._List.ListNode";
haxe_ds__$List_ListNode.prototype = {
	__class__: haxe_ds__$List_ListNode
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = "haxe.ds.ObjectMap";
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = "haxe.io.Bytes";
haxe_io_Bytes.ofString = function(s,encoding) {
	if(encoding == haxe_io_Encoding.RawNative) {
		var buf = new Uint8Array(s.length << 1);
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var c = s.charCodeAt(i);
			buf[i << 1] = c & 255;
			buf[i << 1 | 1] = c >> 8;
		}
		return new haxe_io_Bytes(buf.buffer);
	}
	var a = [];
	var i1 = 0;
	while(i1 < s.length) {
		var c1 = s.charCodeAt(i1++);
		if(55296 <= c1 && c1 <= 56319) {
			c1 = c1 - 55232 << 10 | s.charCodeAt(i1++) & 1023;
		}
		if(c1 <= 127) {
			a.push(c1);
		} else if(c1 <= 2047) {
			a.push(192 | c1 >> 6);
			a.push(128 | c1 & 63);
		} else if(c1 <= 65535) {
			a.push(224 | c1 >> 12);
			a.push(128 | c1 >> 6 & 63);
			a.push(128 | c1 & 63);
		} else {
			a.push(240 | c1 >> 18);
			a.push(128 | c1 >> 12 & 63);
			a.push(128 | c1 >> 6 & 63);
			a.push(128 | c1 & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofHex = function(s) {
	if((s.length & 1) != 0) {
		throw new js__$Boot_HaxeError("Not a hex string (odd number of digits)");
	}
	var a = [];
	var i = 0;
	var len = s.length >> 1;
	while(i < len) {
		var high = s.charCodeAt(i * 2);
		var low = s.charCodeAt(i * 2 + 1);
		high = (high & 15) + ((high & 64) >> 6) * 9;
		low = (low & 15) + ((low & 64) >> 6) * 9;
		a.push((high << 4 | low) & 255);
		++i;
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.prototype = {
	blit: function(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(srcpos == 0 && len == src.b.byteLength) {
			this.b.set(src.b,pos);
		} else {
			this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
		}
	}
	,getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			var debug = pos > 0;
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var c2 = b[i++];
					var code1 = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var c21 = b[i++];
					var c3 = b[i++];
					var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c1 = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c1);
			}
			break;
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,toHex: function() {
		var s_b = "";
		var chars = [];
		var str = "0123456789abcdef";
		var _g = 0;
		var _g1 = str.length;
		while(_g < _g1) {
			var i = _g++;
			chars.push(HxOverrides.cca(str,i));
		}
		var _g2 = 0;
		var _g3 = this.length;
		while(_g2 < _g3) {
			var i1 = _g2++;
			var c = this.b[i1];
			s_b += String.fromCodePoint(chars[c >> 4]);
			s_b += String.fromCodePoint(chars[c & 15]);
		}
		return s_b;
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_BytesBuffer = function() {
	this.pos = 0;
	this.size = 0;
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = "haxe.io.BytesBuffer";
haxe_io_BytesBuffer.prototype = {
	addByte: function(byte) {
		if(this.pos == this.size) {
			this.grow(1);
		}
		this.view.setUint8(this.pos++,byte);
	}
	,addBytes: function(src,pos,len) {
		if(pos < 0 || len < 0 || pos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.pos + len > this.size) {
			this.grow(len);
		}
		if(this.size == 0) {
			return;
		}
		var sub = new Uint8Array(src.b.buffer,src.b.byteOffset + pos,len);
		this.u8.set(sub,this.pos);
		this.pos += len;
	}
	,grow: function(delta) {
		var req = this.pos + delta;
		var nsize = this.size == 0 ? 16 : this.size;
		while(nsize < req) nsize = nsize * 3 >> 1;
		var nbuf = new ArrayBuffer(nsize);
		var nu8 = new Uint8Array(nbuf);
		if(this.size > 0) {
			nu8.set(this.u8);
		}
		this.size = nsize;
		this.buffer = nbuf;
		this.u8 = nu8;
		this.view = new DataView(this.buffer);
	}
	,getBytes: function() {
		if(this.size == 0) {
			return new haxe_io_Bytes(new ArrayBuffer(0));
		}
		var b = new haxe_io_Bytes(this.buffer);
		b.length = this.pos;
		return b;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = "haxe.io.Input";
haxe_io_Input.prototype = {
	readByte: function() {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( eof ) {
			var eof1 = ((eof) instanceof js__$Boot_HaxeError) ? eof.val : eof;
			if(((eof1) instanceof haxe_io_Eof)) {
				var eof2 = eof1;
			} else {
				throw eof;
			}
		}
		return len - k;
	}
	,close: function() {
	}
	,readAll: function(bufsize) {
		if(bufsize == null) {
			bufsize = 16384;
		}
		var buf = new haxe_io_Bytes(new ArrayBuffer(bufsize));
		var total = new haxe_io_BytesBuffer();
		try {
			while(true) {
				var len = this.readBytes(buf,0,bufsize);
				if(len == 0) {
					throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
				}
				total.addBytes(buf,0,len);
			}
		} catch( e ) {
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			if(((e1) instanceof haxe_io_Eof)) {
				var e2 = e1;
			} else {
				throw e;
			}
		}
		return total.getBytes();
	}
	,readFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.readBytes(s,pos,len);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			pos += k;
			len -= k;
		}
	}
	,read: function(nbytes) {
		var s = new haxe_io_Bytes(new ArrayBuffer(nbytes));
		var p = 0;
		while(nbytes > 0) {
			var k = this.readBytes(s,p,nbytes);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			nbytes -= k;
		}
		return s;
	}
	,readUInt24: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		if(this.bigEndian) {
			return ch3 | ch2 << 8 | ch1 << 16;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16;
		}
	}
	,readString: function(len,encoding) {
		var b = new haxe_io_Bytes(new ArrayBuffer(len));
		this.readFullBytes(b,0,len);
		return b.getString(0,len,encoding);
	}
	,__class__: haxe_io_Input
};
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) {
		pos = 0;
	}
	if(len == null) {
		len = b.length - pos;
	}
	if(pos < 0 || len < 0 || pos + len > b.length) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
$hxClasses["haxe.io.BytesInput"] = haxe_io_BytesInput;
haxe_io_BytesInput.__name__ = "haxe.io.BytesInput";
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	readByte: function() {
		if(this.len == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.len--;
		return this.b[this.pos++];
	}
	,readBytes: function(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.len == 0 && len > 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		if(this.len < len) {
			len = this.len;
		}
		var b1 = this.b;
		var b2 = buf.b;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
	,__class__: haxe_io_BytesInput
});
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = "haxe.io.Output";
haxe_io_Output.prototype = {
	writeByte: function(c) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,writeBytes: function(s,pos,len) {
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var b = s.b;
		var k = len;
		while(k > 0) {
			this.writeByte(b[pos]);
			++pos;
			--k;
		}
		return len;
	}
	,flush: function() {
	}
	,close: function() {
	}
	,write: function(s) {
		var l = s.length;
		var p = 0;
		while(l > 0) {
			var k = this.writeBytes(s,p,l);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			l -= k;
		}
	}
	,writeUInt24: function(x) {
		if(x < 0 || x >= 16777216) {
			throw new js__$Boot_HaxeError(haxe_io_Error.Overflow);
		}
		if(this.bigEndian) {
			this.writeByte(x >> 16);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16);
		}
	}
	,__class__: haxe_io_Output
};
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
$hxClasses["haxe.io.BytesOutput"] = haxe_io_BytesOutput;
haxe_io_BytesOutput.__name__ = "haxe.io.BytesOutput";
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	writeByte: function(c) {
		this.b.addByte(c);
	}
	,writeBytes: function(buf,pos,len) {
		this.b.addBytes(buf,pos,len);
		return len;
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
});
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__ : "haxe.io.Encoding", __constructs__ : ["UTF8","RawNative"]
	,UTF8: {_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = "haxe.io.Eof";
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__ : "haxe.io.Error", __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"]
	,Blocked: {_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_.__params__ = ["e"],$_)
};
var haxe_io_StringInput = function(s) {
	haxe_io_BytesInput.call(this,haxe_io_Bytes.ofString(s));
};
$hxClasses["haxe.io.StringInput"] = haxe_io_StringInput;
haxe_io_StringInput.__name__ = "haxe.io.StringInput";
haxe_io_StringInput.__super__ = haxe_io_BytesInput;
haxe_io_StringInput.prototype = $extend(haxe_io_BytesInput.prototype,{
	__class__: haxe_io_StringInput
});
var haxedb_storage_Page = function(id,book) {
	if(id == null) {
		id = -1;
	}
	this.book = null;
	this.book = book;
	if(id == -1 && book != null) {
		id = book.nextFreePage();
	}
	this.header = { id : id, size : 0};
	this.contents = haxe_io_Bytes.ofString("");
};
$hxClasses["haxedb.storage.Page"] = haxedb_storage_Page;
haxedb_storage_Page.__name__ = "haxedb.storage.Page";
haxedb_storage_Page.fromBytes = function(bytes) {
	var input = new haxe_io_BytesInput(bytes);
	var id = input.readUInt24();
	var size = input.readUInt24();
	var page = new haxedb_storage_Page(id);
	page.writeFromBytes(input.read(size - input.pos));
	input.close();
	return page;
};
haxedb_storage_Page.prototype = {
	id: function() {
		return this.header.id;
	}
	,size: function() {
		return this.header.size;
	}
	,updateSize: function() {
		this.header.size = this.toBytes(false).length;
	}
	,writeFromHex: function(hex) {
		var bytes = haxe_io_Bytes.ofHex(hex);
		return this.writeFromBytes(bytes);
	}
	,writeFromString: function(string) {
		var bytes = haxe_io_Bytes.ofString(string);
		return this.writeFromBytes(bytes);
	}
	,writeFromBytes: function(data) {
		if(data.length < this.pageSize()) {
			this.contents = data;
			this.updateSize();
			return true;
		}
		return false;
	}
	,string: function() {
		return this.contents.toString();
	}
	,hex: function() {
		return this.contents.toHex();
	}
	,raw: function() {
		return this.contents;
	}
	,padded: function() {
		var padLength = this.pageSize() - this.header.size;
		var bytesOutput = new haxe_io_BytesOutput();
		bytesOutput.write(this.contents);
		var _g = 0;
		var _g1 = padLength;
		while(_g < _g1) {
			var i = _g++;
			bytesOutput.writeByte(0);
		}
		var bytes = bytesOutput.getBytes();
		bytesOutput.close();
		return bytes;
	}
	,toBytes: function(padding) {
		if(padding == null) {
			padding = true;
		}
		var output = new haxe_io_BytesOutput();
		output.writeUInt24(this.header.id);
		output.writeUInt24(this.header.size);
		output.write(padding ? this.padded() : this.contents);
		var bytes = output.getBytes();
		output.close();
		return bytes;
	}
	,pageSize: function() {
		if(this.book != null) {
			return this.book.get_pageSize();
		} else {
			return 8000;
		}
	}
	,__class__: haxedb_storage_Page
};
var haxedb_storage_RecordsPage = function(id,book) {
	if(id == null) {
		id = -1;
	}
	haxedb_storage_Page.call(this,id,book);
};
$hxClasses["haxedb.storage.RecordsPage"] = haxedb_storage_RecordsPage;
haxedb_storage_RecordsPage.__name__ = "haxedb.storage.RecordsPage";
haxedb_storage_RecordsPage.fromPage = function(page) {
	var recordsPage = new haxedb_storage_RecordsPage(page.id(),page.book);
	recordsPage.writeFromString(page.string());
	return recordsPage;
};
haxedb_storage_RecordsPage.__super__ = haxedb_storage_Page;
haxedb_storage_RecordsPage.prototype = $extend(haxedb_storage_Page.prototype,{
	records: function() {
		var str = this.string();
		if(str.length != 0) {
			return haxe_Unserializer.run(str);
		} else {
			return [];
		}
	}
	,addRecord: function(record) {
		var records = this.records();
		record.location.pageNo = this.header.id;
		record.location.recordNo = records.length != 0 ? records[records.length - 1].location.recordNo + 1 : 0;
		records.push(record);
		return this.writeFromRecords(records);
	}
	,addRecords: function(incomingRecords) {
		var _gthis = this;
		var records = this.records();
		var addRecord = function(record) {
			record.location.pageNo = _gthis.header.id;
			record.location.recordNo = records.length != 0 ? records[records.length - 1].location.recordNo + 1 : 0;
			return records.push(record);
		};
		var _g = 0;
		while(_g < incomingRecords.length) {
			var record1 = incomingRecords[_g];
			++_g;
			addRecord(record1);
		}
		return this.writeFromRecords(records);
	}
	,updateRecord: function(predicate,value) {
		var records = this.records();
		var recordToReplace = Lambda.find(records,predicate);
		if(recordToReplace != null) {
			recordToReplace.data = value;
			return this.writeFromRecords(records);
		} else {
			return false;
		}
	}
	,updateRecords: function(predicate,value) {
		var records = this.records();
		var recordsToReplace = records.filter(predicate);
		if(recordsToReplace != null && recordsToReplace.length != 0) {
			Lambda.iter(recordsToReplace,function(record) {
				return record.data = value;
			});
			return this.writeFromRecords(records);
		} else {
			return false;
		}
	}
	,getRecord: function(predicate) {
		var records = this.records();
		return Lambda.find(records,predicate);
	}
	,getRecords: function(predicate) {
		var records = this.records();
		return records.filter(predicate);
	}
	,removeRecord: function(recordNo) {
		var records = this.records();
		var recordToRemove = Lambda.find(records,function(record) {
			return record.location.recordNo == recordNo;
		});
		if(recordToRemove == null) {
			return false;
		}
		HxOverrides.remove(records,recordToRemove);
		return this.writeFromRecords(records);
	}
	,writeFromRecords: function(records) {
		this.book.persistPage(this);
		return this.writeFromString(haxe_Serializer.run(records));
	}
	,__class__: haxedb_storage_RecordsPage
});
var haxedb_sys_SysIndex = function() {
};
$hxClasses["haxedb.sys.SysIndex"] = haxedb_sys_SysIndex;
haxedb_sys_SysIndex.__name__ = "haxedb.sys.SysIndex";
haxedb_sys_SysIndex.prototype = {
	__class__: haxedb_sys_SysIndex
};
var hscript_Const = $hxEnums["hscript.Const"] = { __ename__ : "hscript.Const", __constructs__ : ["CInt","CFloat","CString"]
	,CInt: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"hscript.Const",toString:$estr}; },$_.__params__ = ["v"],$_)
	,CFloat: ($_=function(f) { return {_hx_index:1,f:f,__enum__:"hscript.Const",toString:$estr}; },$_.__params__ = ["f"],$_)
	,CString: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"hscript.Const",toString:$estr}; },$_.__params__ = ["s"],$_)
};
var hscript_Expr = $hxEnums["hscript.Expr"] = { __ename__ : "hscript.Expr", __constructs__ : ["EConst","EIdent","EVar","EParent","EBlock","EField","EBinop","EUnop","ECall","EIf","EWhile","EFor","EBreak","EContinue","EFunction","EReturn","EArray","EArrayDecl","ENew","EThrow","ETry","EObject","ETernary","ESwitch","EDoWhile","EMeta","ECheckType"]
	,EConst: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["c"],$_)
	,EIdent: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["v"],$_)
	,EVar: ($_=function(n,t,e) { return {_hx_index:2,n:n,t:t,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["n","t","e"],$_)
	,EParent: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,EBlock: ($_=function(e) { return {_hx_index:4,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,EField: ($_=function(e,f) { return {_hx_index:5,e:e,f:f,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","f"],$_)
	,EBinop: ($_=function(op,e1,e2) { return {_hx_index:6,op:op,e1:e1,e2:e2,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["op","e1","e2"],$_)
	,EUnop: ($_=function(op,prefix,e) { return {_hx_index:7,op:op,prefix:prefix,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["op","prefix","e"],$_)
	,ECall: ($_=function(e,params) { return {_hx_index:8,e:e,params:params,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","params"],$_)
	,EIf: ($_=function(cond,e1,e2) { return {_hx_index:9,cond:cond,e1:e1,e2:e2,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cond","e1","e2"],$_)
	,EWhile: ($_=function(cond,e) { return {_hx_index:10,cond:cond,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cond","e"],$_)
	,EFor: ($_=function(v,it,e) { return {_hx_index:11,v:v,it:it,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["v","it","e"],$_)
	,EBreak: {_hx_index:12,__enum__:"hscript.Expr",toString:$estr}
	,EContinue: {_hx_index:13,__enum__:"hscript.Expr",toString:$estr}
	,EFunction: ($_=function(args,e,name,ret) { return {_hx_index:14,args:args,e:e,name:name,ret:ret,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["args","e","name","ret"],$_)
	,EReturn: ($_=function(e) { return {_hx_index:15,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,EArray: ($_=function(e,index) { return {_hx_index:16,e:e,index:index,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","index"],$_)
	,EArrayDecl: ($_=function(e) { return {_hx_index:17,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,ENew: ($_=function(cl,params) { return {_hx_index:18,cl:cl,params:params,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cl","params"],$_)
	,EThrow: ($_=function(e) { return {_hx_index:19,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,ETry: ($_=function(e,v,t,ecatch) { return {_hx_index:20,e:e,v:v,t:t,ecatch:ecatch,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","v","t","ecatch"],$_)
	,EObject: ($_=function(fl) { return {_hx_index:21,fl:fl,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["fl"],$_)
	,ETernary: ($_=function(cond,e1,e2) { return {_hx_index:22,cond:cond,e1:e1,e2:e2,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cond","e1","e2"],$_)
	,ESwitch: ($_=function(e,cases,defaultExpr) { return {_hx_index:23,e:e,cases:cases,defaultExpr:defaultExpr,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","cases","defaultExpr"],$_)
	,EDoWhile: ($_=function(cond,e) { return {_hx_index:24,cond:cond,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cond","e"],$_)
	,EMeta: ($_=function(name,args,e) { return {_hx_index:25,name:name,args:args,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["name","args","e"],$_)
	,ECheckType: ($_=function(e,t) { return {_hx_index:26,e:e,t:t,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","t"],$_)
};
var hscript_CType = $hxEnums["hscript.CType"] = { __ename__ : "hscript.CType", __constructs__ : ["CTPath","CTFun","CTAnon","CTParent","CTOpt","CTNamed"]
	,CTPath: ($_=function(path,params) { return {_hx_index:0,path:path,params:params,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["path","params"],$_)
	,CTFun: ($_=function(args,ret) { return {_hx_index:1,args:args,ret:ret,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["args","ret"],$_)
	,CTAnon: ($_=function(fields) { return {_hx_index:2,fields:fields,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["fields"],$_)
	,CTParent: ($_=function(t) { return {_hx_index:3,t:t,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["t"],$_)
	,CTOpt: ($_=function(t) { return {_hx_index:4,t:t,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["t"],$_)
	,CTNamed: ($_=function(n,t) { return {_hx_index:5,n:n,t:t,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["n","t"],$_)
};
var hscript_Error = $hxEnums["hscript.Error"] = { __ename__ : "hscript.Error", __constructs__ : ["EInvalidChar","EUnexpected","EUnterminatedString","EUnterminatedComment","EInvalidPreprocessor","EUnknownVariable","EInvalidIterator","EInvalidOp","EInvalidAccess","ECustom"]
	,EInvalidChar: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["c"],$_)
	,EUnexpected: ($_=function(s) { return {_hx_index:1,s:s,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["s"],$_)
	,EUnterminatedString: {_hx_index:2,__enum__:"hscript.Error",toString:$estr}
	,EUnterminatedComment: {_hx_index:3,__enum__:"hscript.Error",toString:$estr}
	,EInvalidPreprocessor: ($_=function(msg) { return {_hx_index:4,msg:msg,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["msg"],$_)
	,EUnknownVariable: ($_=function(v) { return {_hx_index:5,v:v,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["v"],$_)
	,EInvalidIterator: ($_=function(v) { return {_hx_index:6,v:v,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["v"],$_)
	,EInvalidOp: ($_=function(op) { return {_hx_index:7,op:op,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["op"],$_)
	,EInvalidAccess: ($_=function(f) { return {_hx_index:8,f:f,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["f"],$_)
	,ECustom: ($_=function(msg) { return {_hx_index:9,msg:msg,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["msg"],$_)
};
var hscript_ModuleDecl = $hxEnums["hscript.ModuleDecl"] = { __ename__ : "hscript.ModuleDecl", __constructs__ : ["DPackage","DImport","DClass","DTypedef"]
	,DPackage: ($_=function(path) { return {_hx_index:0,path:path,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_.__params__ = ["path"],$_)
	,DImport: ($_=function(path,everything) { return {_hx_index:1,path:path,everything:everything,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_.__params__ = ["path","everything"],$_)
	,DClass: ($_=function(c) { return {_hx_index:2,c:c,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_.__params__ = ["c"],$_)
	,DTypedef: ($_=function(c) { return {_hx_index:3,c:c,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_.__params__ = ["c"],$_)
};
var hscript_FieldAccess = $hxEnums["hscript.FieldAccess"] = { __ename__ : "hscript.FieldAccess", __constructs__ : ["APublic","APrivate","AInline","AOverride","AStatic","AMacro"]
	,APublic: {_hx_index:0,__enum__:"hscript.FieldAccess",toString:$estr}
	,APrivate: {_hx_index:1,__enum__:"hscript.FieldAccess",toString:$estr}
	,AInline: {_hx_index:2,__enum__:"hscript.FieldAccess",toString:$estr}
	,AOverride: {_hx_index:3,__enum__:"hscript.FieldAccess",toString:$estr}
	,AStatic: {_hx_index:4,__enum__:"hscript.FieldAccess",toString:$estr}
	,AMacro: {_hx_index:5,__enum__:"hscript.FieldAccess",toString:$estr}
};
var hscript_FieldKind = $hxEnums["hscript.FieldKind"] = { __ename__ : "hscript.FieldKind", __constructs__ : ["KFunction","KVar"]
	,KFunction: ($_=function(f) { return {_hx_index:0,f:f,__enum__:"hscript.FieldKind",toString:$estr}; },$_.__params__ = ["f"],$_)
	,KVar: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hscript.FieldKind",toString:$estr}; },$_.__params__ = ["v"],$_)
};
var hscript__$Interp_Stop = $hxEnums["hscript._Interp.Stop"] = { __ename__ : "hscript._Interp.Stop", __constructs__ : ["SBreak","SContinue","SReturn"]
	,SBreak: {_hx_index:0,__enum__:"hscript._Interp.Stop",toString:$estr}
	,SContinue: {_hx_index:1,__enum__:"hscript._Interp.Stop",toString:$estr}
	,SReturn: {_hx_index:2,__enum__:"hscript._Interp.Stop",toString:$estr}
};
var hscript_Token = $hxEnums["hscript.Token"] = { __ename__ : "hscript.Token", __constructs__ : ["TEof","TConst","TId","TOp","TPOpen","TPClose","TBrOpen","TBrClose","TDot","TComma","TSemicolon","TBkOpen","TBkClose","TQuestion","TDoubleDot","TMeta","TPrepro"]
	,TEof: {_hx_index:0,__enum__:"hscript.Token",toString:$estr}
	,TConst: ($_=function(c) { return {_hx_index:1,c:c,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["c"],$_)
	,TId: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["s"],$_)
	,TOp: ($_=function(s) { return {_hx_index:3,s:s,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["s"],$_)
	,TPOpen: {_hx_index:4,__enum__:"hscript.Token",toString:$estr}
	,TPClose: {_hx_index:5,__enum__:"hscript.Token",toString:$estr}
	,TBrOpen: {_hx_index:6,__enum__:"hscript.Token",toString:$estr}
	,TBrClose: {_hx_index:7,__enum__:"hscript.Token",toString:$estr}
	,TDot: {_hx_index:8,__enum__:"hscript.Token",toString:$estr}
	,TComma: {_hx_index:9,__enum__:"hscript.Token",toString:$estr}
	,TSemicolon: {_hx_index:10,__enum__:"hscript.Token",toString:$estr}
	,TBkOpen: {_hx_index:11,__enum__:"hscript.Token",toString:$estr}
	,TBkClose: {_hx_index:12,__enum__:"hscript.Token",toString:$estr}
	,TQuestion: {_hx_index:13,__enum__:"hscript.Token",toString:$estr}
	,TDoubleDot: {_hx_index:14,__enum__:"hscript.Token",toString:$estr}
	,TMeta: ($_=function(s) { return {_hx_index:15,s:s,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["s"],$_)
	,TPrepro: ($_=function(s) { return {_hx_index:16,s:s,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["s"],$_)
};
var hscript_Tools = function() { };
$hxClasses["hscript.Tools"] = hscript_Tools;
hscript_Tools.__name__ = "hscript.Tools";
hscript_Tools.iter = function(e,f) {
	switch(e._hx_index) {
	case 0:case 1:
		break;
	case 2:
		var e1 = e.e;
		if(e1 != null) {
			f(e1);
		}
		break;
	case 3:
		var e2 = e.e;
		f(e2);
		break;
	case 4:
		var el = e.e;
		var _g = 0;
		while(_g < el.length) {
			var e3 = el[_g];
			++_g;
			f(e3);
		}
		break;
	case 5:
		var e4 = e.e;
		f(e4);
		break;
	case 6:
		var e21 = e.e2;
		var e11 = e.e1;
		f(e11);
		f(e21);
		break;
	case 7:
		var e5 = e.e;
		f(e5);
		break;
	case 8:
		var args = e.params;
		var e6 = e.e;
		f(e6);
		var _g1 = 0;
		while(_g1 < args.length) {
			var a = args[_g1];
			++_g1;
			f(a);
		}
		break;
	case 9:
		var e22 = e.e2;
		var e12 = e.e1;
		var c = e.cond;
		f(c);
		f(e12);
		if(e22 != null) {
			f(e22);
		}
		break;
	case 10:
		var e7 = e.e;
		var c1 = e.cond;
		f(c1);
		f(e7);
		break;
	case 11:
		var e8 = e.e;
		var it = e.it;
		f(it);
		f(e8);
		break;
	case 12:case 13:
		break;
	case 14:
		var e9 = e.e;
		f(e9);
		break;
	case 15:
		var e10 = e.e;
		if(e10 != null) {
			f(e10);
		}
		break;
	case 16:
		var i = e.index;
		var e13 = e.e;
		f(e13);
		f(i);
		break;
	case 17:
		var el1 = e.e;
		var _g2 = 0;
		while(_g2 < el1.length) {
			var e14 = el1[_g2];
			++_g2;
			f(e14);
		}
		break;
	case 18:
		var el2 = e.params;
		var _g3 = 0;
		while(_g3 < el2.length) {
			var e15 = el2[_g3];
			++_g3;
			f(e15);
		}
		break;
	case 19:
		var e16 = e.e;
		f(e16);
		break;
	case 20:
		var c2 = e.ecatch;
		var e17 = e.e;
		f(e17);
		f(c2);
		break;
	case 21:
		var fl = e.fl;
		var _g4 = 0;
		while(_g4 < fl.length) {
			var fi = fl[_g4];
			++_g4;
			f(fi.e);
		}
		break;
	case 22:
		var e23 = e.e2;
		var e18 = e.e1;
		var c3 = e.cond;
		f(c3);
		f(e18);
		f(e23);
		break;
	case 23:
		var def = e.defaultExpr;
		var cases = e.cases;
		var e19 = e.e;
		f(e19);
		var _g5 = 0;
		while(_g5 < cases.length) {
			var c4 = cases[_g5];
			++_g5;
			var _g6 = 0;
			var _g11 = c4.values;
			while(_g6 < _g11.length) {
				var v = _g11[_g6];
				++_g6;
				f(v);
			}
			f(c4.expr);
		}
		if(def != null) {
			f(def);
		}
		break;
	case 24:
		var e20 = e.e;
		var c5 = e.cond;
		f(c5);
		f(e20);
		break;
	case 25:
		var e24 = e.e;
		var args1 = e.args;
		var name = e.name;
		if(args1 != null) {
			var _g7 = 0;
			while(_g7 < args1.length) {
				var a1 = args1[_g7];
				++_g7;
				f(a1);
			}
		}
		f(e24);
		break;
	case 26:
		var e25 = e.e;
		f(e25);
		break;
	}
};
hscript_Tools.map = function(e,f) {
	var edef;
	switch(e._hx_index) {
	case 0:case 1:case 12:case 13:
		edef = e;
		break;
	case 2:
		var e1 = e.e;
		var t = e.t;
		var n = e.n;
		edef = hscript_Expr.EVar(n,t,e1 != null ? f(e1) : null);
		break;
	case 3:
		var e2 = e.e;
		edef = hscript_Expr.EParent(f(e2));
		break;
	case 4:
		var el = e.e;
		var _g = [];
		var _g1 = 0;
		while(_g1 < el.length) {
			var e3 = el[_g1];
			++_g1;
			_g.push(f(e3));
		}
		edef = hscript_Expr.EBlock(_g);
		break;
	case 5:
		var fi = e.f;
		var e4 = e.e;
		edef = hscript_Expr.EField(f(e4),fi);
		break;
	case 6:
		var e21 = e.e2;
		var e11 = e.e1;
		var op = e.op;
		edef = hscript_Expr.EBinop(op,f(e11),f(e21));
		break;
	case 7:
		var e5 = e.e;
		var pre = e.prefix;
		var op1 = e.op;
		edef = hscript_Expr.EUnop(op1,pre,f(e5));
		break;
	case 8:
		var args = e.params;
		var e6 = e.e;
		var edef1 = f(e6);
		var _g2 = [];
		var _g11 = 0;
		while(_g11 < args.length) {
			var a = args[_g11];
			++_g11;
			_g2.push(f(a));
		}
		edef = hscript_Expr.ECall(edef1,_g2);
		break;
	case 9:
		var e22 = e.e2;
		var e12 = e.e1;
		var c = e.cond;
		edef = hscript_Expr.EIf(f(c),f(e12),e22 != null ? f(e22) : null);
		break;
	case 10:
		var e7 = e.e;
		var c1 = e.cond;
		edef = hscript_Expr.EWhile(f(c1),f(e7));
		break;
	case 11:
		var e8 = e.e;
		var it = e.it;
		var v = e.v;
		edef = hscript_Expr.EFor(v,f(it),f(e8));
		break;
	case 14:
		var t1 = e.ret;
		var name = e.name;
		var e9 = e.e;
		var args1 = e.args;
		edef = hscript_Expr.EFunction(args1,f(e9),name,t1);
		break;
	case 15:
		var e10 = e.e;
		edef = hscript_Expr.EReturn(e10 != null ? f(e10) : null);
		break;
	case 16:
		var i = e.index;
		var e13 = e.e;
		edef = hscript_Expr.EArray(f(e13),f(i));
		break;
	case 17:
		var el1 = e.e;
		var _g3 = [];
		var _g12 = 0;
		while(_g12 < el1.length) {
			var e14 = el1[_g12];
			++_g12;
			_g3.push(f(e14));
		}
		edef = hscript_Expr.EArrayDecl(_g3);
		break;
	case 18:
		var el2 = e.params;
		var cl = e.cl;
		var _g4 = [];
		var _g13 = 0;
		while(_g13 < el2.length) {
			var e15 = el2[_g13];
			++_g13;
			_g4.push(f(e15));
		}
		edef = hscript_Expr.ENew(cl,_g4);
		break;
	case 19:
		var e16 = e.e;
		edef = hscript_Expr.EThrow(f(e16));
		break;
	case 20:
		var c2 = e.ecatch;
		var t2 = e.t;
		var v1 = e.v;
		var e17 = e.e;
		edef = hscript_Expr.ETry(f(e17),v1,t2,f(c2));
		break;
	case 21:
		var fl = e.fl;
		var _g5 = [];
		var _g14 = 0;
		while(_g14 < fl.length) {
			var fi1 = fl[_g14];
			++_g14;
			_g5.push({ name : fi1.name, e : f(fi1.e)});
		}
		edef = hscript_Expr.EObject(_g5);
		break;
	case 22:
		var e23 = e.e2;
		var e18 = e.e1;
		var c3 = e.cond;
		edef = hscript_Expr.ETernary(f(c3),f(e18),f(e23));
		break;
	case 23:
		var def = e.defaultExpr;
		var cases = e.cases;
		var e19 = e.e;
		var edef2 = f(e19);
		var _g6 = [];
		var _g15 = 0;
		while(_g15 < cases.length) {
			var c4 = cases[_g15];
			++_g15;
			var _g16 = [];
			var _g21 = 0;
			var _g31 = c4.values;
			while(_g21 < _g31.length) {
				var v2 = _g31[_g21];
				++_g21;
				_g16.push(f(v2));
			}
			_g6.push({ values : _g16, expr : f(c4.expr)});
		}
		edef = hscript_Expr.ESwitch(edef2,_g6,def == null ? null : f(def));
		break;
	case 24:
		var e20 = e.e;
		var c5 = e.cond;
		edef = hscript_Expr.EDoWhile(f(c5),f(e20));
		break;
	case 25:
		var e24 = e.e;
		var args2 = e.args;
		var name1 = e.name;
		var edef3;
		if(args2 == null) {
			edef3 = null;
		} else {
			var _g7 = [];
			var _g17 = 0;
			while(_g17 < args2.length) {
				var a1 = args2[_g17];
				++_g17;
				_g7.push(f(a1));
			}
			edef3 = _g7;
		}
		edef = hscript_Expr.EMeta(name1,edef3,f(e24));
		break;
	case 26:
		var t3 = e.t;
		var e25 = e.e;
		edef = hscript_Expr.ECheckType(f(e25),t3);
		break;
	}
	return edef;
};
hscript_Tools.expr = function(e) {
	return e;
};
hscript_Tools.mk = function(e,p) {
	return e;
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = "js._Boot.HaxeError";
js__$Boot_HaxeError.wrap = function(val) {
	if(((val) instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_node_Fs = require("fs");
var js_node_Readline = require("readline");
var js_node_buffer_Buffer = require("buffer").Buffer;
var sys_FileSystem = function() { };
$hxClasses["sys.FileSystem"] = sys_FileSystem;
sys_FileSystem.__name__ = "sys.FileSystem";
sys_FileSystem.exists = function(path) {
	try {
		js_node_Fs.accessSync(path);
		return true;
	} catch( _ ) {
		var _1 = ((_) instanceof js__$Boot_HaxeError) ? _.val : _;
		return false;
	}
};
var sys_io_FileInput = function(fd) {
	this.fd = fd;
	this.pos = 0;
};
$hxClasses["sys.io.FileInput"] = sys_io_FileInput;
sys_io_FileInput.__name__ = "sys.io.FileInput";
sys_io_FileInput.__super__ = haxe_io_Input;
sys_io_FileInput.prototype = $extend(haxe_io_Input.prototype,{
	readByte: function() {
		var buf = new js_node_buffer_Buffer(1);
		var bytesRead;
		try {
			bytesRead = js_node_Fs.readSync(this.fd,buf,0,1,this.pos);
		} catch( e ) {
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			if(e1.code == "EOF") {
				throw new js__$Boot_HaxeError(new haxe_io_Eof());
			} else {
				throw new js__$Boot_HaxeError(haxe_io_Error.Custom(e1));
			}
		}
		if(bytesRead == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.pos++;
		return buf[0];
	}
	,readBytes: function(s,pos,len) {
		var data = s.b;
		var buf = js_node_buffer_Buffer.from(data.buffer,data.byteOffset,s.length);
		var bytesRead;
		try {
			bytesRead = js_node_Fs.readSync(this.fd,buf,pos,len,this.pos);
		} catch( e ) {
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			if(e1.code == "EOF") {
				throw new js__$Boot_HaxeError(new haxe_io_Eof());
			} else {
				throw new js__$Boot_HaxeError(haxe_io_Error.Custom(e1));
			}
		}
		if(bytesRead == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.pos += bytesRead;
		return bytesRead;
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,seek: function(p,pos) {
		switch(pos._hx_index) {
		case 0:
			this.pos = p;
			break;
		case 1:
			this.pos += p;
			break;
		case 2:
			this.pos = js_node_Fs.fstatSync(this.fd).size + p;
			break;
		}
	}
	,tell: function() {
		return this.pos;
	}
	,eof: function() {
		return this.pos >= js_node_Fs.fstatSync(this.fd).size;
	}
	,__class__: sys_io_FileInput
});
var sys_io_FileOutput = function(fd) {
	this.fd = fd;
	this.pos = 0;
};
$hxClasses["sys.io.FileOutput"] = sys_io_FileOutput;
sys_io_FileOutput.__name__ = "sys.io.FileOutput";
sys_io_FileOutput.__super__ = haxe_io_Output;
sys_io_FileOutput.prototype = $extend(haxe_io_Output.prototype,{
	writeByte: function(b) {
		var buf = new js_node_buffer_Buffer(1);
		buf[0] = b;
		js_node_Fs.writeSync(this.fd,buf,0,1,this.pos);
		this.pos++;
	}
	,writeBytes: function(s,pos,len) {
		var data = s.b;
		var buf = js_node_buffer_Buffer.from(data.buffer,data.byteOffset,s.length);
		var wrote = js_node_Fs.writeSync(this.fd,buf,pos,len,this.pos);
		this.pos += wrote;
		return wrote;
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,seek: function(p,pos) {
		switch(pos._hx_index) {
		case 0:
			this.pos = p;
			break;
		case 1:
			this.pos += p;
			break;
		case 2:
			this.pos = js_node_Fs.fstatSync(this.fd).size + p;
			break;
		}
	}
	,tell: function() {
		return this.pos;
	}
	,__class__: sys_io_FileOutput
});
var sys_io_FileSeek = $hxEnums["sys.io.FileSeek"] = { __ename__ : "sys.io.FileSeek", __constructs__ : ["SeekBegin","SeekCur","SeekEnd"]
	,SeekBegin: {_hx_index:0,__enum__:"sys.io.FileSeek",toString:$estr}
	,SeekCur: {_hx_index:1,__enum__:"sys.io.FileSeek",toString:$estr}
	,SeekEnd: {_hx_index:2,__enum__:"sys.io.FileSeek",toString:$estr}
};
function $getIterator(o) { if( o instanceof Array ) return HxOverrides.iter(o); else return o.iterator(); }
var $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = "String";
$hxClasses["Array"] = Array;
Array.__name__ = "Array";
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
$hxClasses["Math"] = Math;
haxe_ds_ObjectMap.count = 0;
var __map_reserved = {};
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
haxedb_sys_System.sysBook = haxedb_storage_Book.open("sys");
haxedb_sys_System.collectionsInitialized = false;
js_Boot.__toStr = ({ }).toString;
hscript_Parser.p1 = 0;
hscript_Parser.readPos = 0;
hscript_Parser.tokenMin = 0;
hscript_Parser.tokenMax = 0;
Console.interp = new hscript_Interp();
Console.parser = new hscript_Parser();
Console.scriptLines = [];
Console.indenters = ["{","(","["];
Console.dedenters = ["}",")","]"];
Console.indents = 1;
Console.api = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var value = function(collectionName) {
			var book = haxedb_storage_Book.open(collectionName);
			var collection = haxedb_storage_Collection.fromBook(book);
			return collection;
		};
		if(__map_reserved["collection"] != null) {
			_g.setReserved("collection",value);
		} else {
			_g.h["collection"] = value;
		}
	}
	{
		var value1 = function(data) {
			return new haxedb_record_Record(data);
		};
		if(__map_reserved["record"] != null) {
			_g.setReserved("record",value1);
		} else {
			_g.h["record"] = value1;
		}
	}
	{
		var _e = Console.interp.variables;
		var value2 = function(key,value3) {
			var value4 = value3;
			if(__map_reserved[key] != null) {
				_e.setReserved(key,value4);
			} else {
				_e.h[key] = value4;
			}
		};
		if(__map_reserved["persist"] != null) {
			_g.setReserved("persist",value2);
		} else {
			_g.h["persist"] = value2;
		}
	}
	$r = _g;
	return $r;
}(this));
Console.apiDefinitions = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	if(__map_reserved["collection"] != null) {
		_g.setReserved("collection","(collectionName:String) -> Collection - Retrieves a collection by name; creates one if one doesn't exist");
	} else {
		_g.h["collection"] = "(collectionName:String) -> Collection - Retrieves a collection by name; creates one if one doesn't exist";
	}
	if(__map_reserved["record"] != null) {
		_g.setReserved("record","(data:Dynamic) -> Record -  Creates a new record object from some data");
	} else {
		_g.h["record"] = "(data:Dynamic) -> Record -  Creates a new record object from some data";
	}
	$r = _g;
	return $r;
}(this));
haxe_Serializer.USE_CACHE = false;
haxe_Serializer.USE_ENUM_INDEX = false;
haxe_Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
Console.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
